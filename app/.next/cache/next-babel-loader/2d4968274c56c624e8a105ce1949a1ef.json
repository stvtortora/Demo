{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/manage_themes.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GridElement } from \"../../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useThemeOptions } from \"../../../hooks/useThemeOptions\";\nimport { ThemeForm } from \"./theme_form\";\nimport buildTheme from \"../../../themes/buildTheme\";\nvar ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"sc-70fh2v-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\n_c = ThemeOptionWrapper;\n\nvar ThemeOption = function ThemeOption(_ref) {\n  var theme = _ref.theme,\n      textStyle = _ref.textStyle,\n      onSelectTheme = _ref.onSelectTheme,\n      onEditTheme = _ref.onEditTheme,\n      _ref$editable = _ref.editable,\n      editable = _ref$editable === void 0 ? true : _ref$editable;\n  return __jsx(ThemeOptionWrapper, {\n    onClick: onSelectTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, textStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), theme.name), editable && onEditTheme && __jsx(FontAwesomeIcon, {\n    onClick: onEditTheme,\n    icon: faEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c2 = ThemeOption;\nvar ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"sc-70fh2v-1\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], function (props) {\n  return \"1px solid \".concat(props.border);\n});\n_c3 = ThemeListWrapper;\n\nvar ThemeListView = function ThemeListView(_ref2) {\n  var currentTheme = _ref2.currentTheme,\n      themeOptions = _ref2.themeOptions,\n      onAddOrUpdateTheme = _ref2.onAddOrUpdateTheme;\n\n  if (!themeOptions) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  var editTheme = function editTheme(theme) {\n    return function () {\n      onAddOrUpdateTheme(theme);\n    };\n  };\n\n  var selectTheme = function selectTheme(theme) {\n    return function () {\n      console.log(theme);\n    };\n  };\n\n  var textStyle = _objectSpread({}, GridElementHeaderProps(currentTheme));\n\n  return __jsx(ThemeListWrapper, {\n    border: currentTheme.border.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: currentTheme.icon.colors.other.c,\n    onClick: onAddOrUpdateTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), themeOptions.map(function (themeOption) {\n    return __jsx(ThemeOption, {\n      theme: themeOption,\n      textStyle: textStyle,\n      onSelectTheme: selectTheme(themeOption),\n      onEditTheme: editTheme(themeOption),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\n_c4 = ThemeListView;\nexport var ManageThemes = function ManageThemes(_ref3) {\n  _s();\n\n  var currentTheme = _ref3.theme,\n      setTheme = _ref3.setTheme;\n\n  var _useState = useState(null),\n      selectedThemeFormValues = _useState[0],\n      setSelectedThemeFormValues = _useState[1];\n\n  var _useThemeOptions = useThemeOptions(),\n      themeOptions = _useThemeOptions.themeOptions,\n      onUpdateTheme = _useThemeOptions.onUpdateTheme;\n\n  var selectThemeForm = function selectThemeForm(formFields) {\n    setSelectedThemeFormValues(formFields);\n  };\n\n  var saveTheme = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(theme) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              onUpdateTheme(theme);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveTheme(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var applyTheme = function applyTheme(theme) {\n    var builtTheme = buildTheme(theme);\n    setTheme(builtTheme);\n  };\n\n  var closeForm = function closeForm() {\n    setSelectedThemeFormValues(null);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), selectedThemeFormValues ? __jsx(ThemeForm, {\n    currentTheme: currentTheme,\n    initialValues: selectedThemeFormValues,\n    onSave: saveTheme,\n    onApply: applyTheme,\n    onDone: closeForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }) : __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(ThemeListView, {\n    themeOptions: themeOptions,\n    currentTheme: currentTheme,\n    onAddOrUpdateTheme: selectThemeForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(ManageThemes, \"2dk3KdXPxDHfkyRtwrQ8H+LHw+4=\", false, function () {\n  return [useThemeOptions];\n});\n\n_c5 = ManageThemes;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ThemeOptionWrapper\");\n$RefreshReg$(_c2, \"ThemeOption\");\n$RefreshReg$(_c3, \"ThemeListWrapper\");\n$RefreshReg$(_c4, \"ThemeListView\");\n$RefreshReg$(_c5, \"ManageThemes\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","faEdit","FontAwesomeIcon","styled","useState","useThemeOptions","ThemeForm","buildTheme","ThemeOptionWrapper","div","ThemeOption","theme","textStyle","onSelectTheme","onEditTheme","editable","name","ThemeListWrapper","props","border","ThemeListView","currentTheme","themeOptions","onAddOrUpdateTheme","editTheme","selectTheme","console","log","colors","primary","icon","other","c","map","themeOption","ManageThemes","setTheme","selectedThemeFormValues","setSelectedThemeFormValues","onUpdateTheme","selectThemeForm","formFields","saveTheme","applyTheme","builtTheme","closeForm","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useThemeOptions } from \"../../../hooks/useThemeOptions\";\nimport { ThemeForm } from \"./theme_form\";\nimport buildTheme from \"../../../themes/buildTheme\";\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ThemeOption = ({\n  theme,\n  textStyle,\n  onSelectTheme,\n  onEditTheme,\n  editable = true,\n}) => {\n  return (\n    <ThemeOptionWrapper onClick={onSelectTheme}>\n      <SimpleText {...textStyle}>{theme.name}</SimpleText>\n      {editable && onEditTheme && (\n        <FontAwesomeIcon onClick={onEditTheme} icon={faEdit} />\n      )}\n    </ThemeOptionWrapper>\n  );\n};\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeListView = ({ currentTheme, themeOptions, onAddOrUpdateTheme }) => {\n  if (!themeOptions) {\n    return <div>Loading...</div>;\n  }\n\n  const editTheme = (theme) => {\n    return () => {\n      onAddOrUpdateTheme(theme);\n    };\n  };\n\n  const selectTheme = (theme) => {\n    return () => {\n      console.log(theme);\n    };\n  };\n\n  const textStyle = { ...GridElementHeaderProps(currentTheme) };\n\n  return (\n    <ThemeListWrapper border={currentTheme.border.colors.primary}>\n      <FontAwesomeIcon\n        icon={faPlusCircle}\n        color={currentTheme.icon.colors.other.c}\n        onClick={onAddOrUpdateTheme}\n      />\n      {themeOptions.map((themeOption) => {\n        return (\n          <ThemeOption\n            theme={themeOption}\n            textStyle={textStyle}\n            onSelectTheme={selectTheme(themeOption)}\n            onEditTheme={editTheme(themeOption)}\n          />\n        );\n      })}\n    </ThemeListWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme: currentTheme, setTheme }) => {\n  const [selectedThemeFormValues, setSelectedThemeFormValues] = useState(null);\n  const { themeOptions, onUpdateTheme } = useThemeOptions();\n\n  const selectThemeForm = (formFields) => {\n    setSelectedThemeFormValues(formFields);\n  };\n\n  const saveTheme = async (theme) => {\n    onUpdateTheme(theme);\n  };\n\n  const applyTheme = (theme) => {\n    const builtTheme = buildTheme(theme);\n    setTheme(builtTheme);\n  };\n\n  const closeForm = () => {\n    setSelectedThemeFormValues(null);\n  };\n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(currentTheme)}>\n        Manage Themes\n      </SimpleText>\n      {selectedThemeFormValues ? (\n        <ThemeForm\n          currentTheme={currentTheme}\n          initialValues={selectedThemeFormValues}\n          onSave={saveTheme}\n          onApply={applyTheme}\n          onDone={closeForm}\n        />\n      ) : (\n        <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n          <GridElement\n            position={{\n              startCol: 1,\n              endCol: 17,\n              startRow: 1,\n              endRow: 10,\n            }}\n          >\n            <ThemeListView\n              themeOptions={themeOptions}\n              currentTheme={currentTheme}\n              onAddOrUpdateTheme={selectThemeForm}\n            />\n          </GridElement>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}