{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\nimport { DefaultTheme } from \"../../themes/DefaultTheme\";\nvar ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\n_c = ThemeOptionWrapper;\n\nvar ThemeOption = function ThemeOption(theme, onSelectTheme, onEditTheme) {\n  __jsx(ThemeOptionWrapper, {\n    onClick: onSelectTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), theme.name), __jsx(FontAwesomeIcon, {\n    onClick: onEditTheme,\n    icon: faEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c2 = ThemeOption;\nvar ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-1\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], function (props) {\n  return \"1px solid \".concat(props.border);\n});\n_c3 = ThemeListWrapper;\n\nvar ThemeListView = function ThemeListView(_ref) {\n  var currentTheme = _ref.currentTheme,\n      themeOptions = _ref.themeOptions,\n      onAddOrUpdateTheme = _ref.onAddOrUpdateTheme,\n      _ref$editable = _ref.editable,\n      editable = _ref$editable === void 0 ? true : _ref$editable;\n\n  var editTheme = function editTheme(theme) {\n    return function () {\n      onAddOrUpdateTheme(theme);\n    };\n  };\n\n  var selectTheme = function selectTheme(theme) {\n    return function () {\n      console.log(theme);\n    };\n  };\n\n  var textStyle = _objectSpread({}, GridElementHeaderProps(currentTheme));\n\n  return __jsx(ThemeListWrapper, {\n    border: currentTheme.border.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, editable && __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: currentTheme.icon.colors.other.c,\n    onClick: onAddOrUpdateTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }), themeOptions.map(function (themeOption) {\n    return __jsx(ThemeOption, {\n      theme: themeOption,\n      textStyle: textStyle,\n      onSelectTheme: selectTheme(theme),\n      onEditTheme: editTheme(themeOption),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\n_c4 = ThemeListView;\nvar ThemeFieldWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFieldWrapper\",\n  componentId: \"npadpy-2\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:10px;\"]);\n_c5 = ThemeFieldWrapper;\nvar ColorSquare = styled.div.withConfig({\n  displayName: \"manage_themes__ColorSquare\",\n  componentId: \"npadpy-3\"\n})([\"background-color:\", \";height:15px;width:15px;&:hover{cursor:pointer;}\"], function (props) {\n  return props.color;\n});\n_c6 = ColorSquare;\n\nvar ThemeField = function ThemeField(_ref2) {\n  _s();\n\n  var currentTheme = _ref2.currentTheme,\n      displayName = _ref2.displayName,\n      value = _ref2.value,\n      fieldKey = _ref2.fieldKey,\n      updateTheme = _ref2.updateTheme;\n  var fieldRef = useRef(null);\n\n  var getFieldRef = function getFieldRef() {\n    return fieldRef;\n  };\n\n  var _useState = useState(false),\n      pickerOpen = _useState[0],\n      setPickerOpen = _useState[1];\n\n  var onChangeComplete = function onChangeComplete(newColor) {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  var onTogglePicker = function onTogglePicker() {\n    return setPickerOpen(!pickerOpen);\n  };\n\n  return __jsx(ThemeFieldWrapper, {\n    ref: optionRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(ColorSquare, {\n    color: value,\n    onClick: onTogglePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), pickerOpen && __jsx(RelativePop, {\n    height: \"89px\",\n    width: \"245px\",\n    position: {\n      horizontal: 7.5,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getFieldRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), __jsx(SimpleText, {\n    color: currentTheme.text.colors.primary,\n    style: currentTheme.text.styles.primary,\n    size: currentTheme.text.sizes.large,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, displayName));\n};\n\n_s(ThemeField, \"Q8R4kpam1JOmOQBTkKXR+TrUjcU=\");\n\n_c7 = ThemeField;\nvar ThemeFormWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFormWrapper\",\n  componentId: \"npadpy-4\"\n})([\"display:flex;flex-direction:column;justify-content:center;margin:20px;\"]);\n_c8 = ThemeFormWrapper;\n\nvar ThemeFormView = function ThemeFormView(_ref3) {\n  _s2();\n\n  var currentTheme = _ref3.currentTheme,\n      initialValues = _ref3.initialValues,\n      formType = _ref3.formType;\n\n  var _useState2 = useState(initialValues),\n      themeValues = _useState2[0],\n      setThemeValues = _useState2[1];\n\n  var updateTheme = function updateTheme(fieldKey, newVal) {\n    setThemeValues(_objectSpread(_objectSpread({}, themeValues), {}, _defineProperty({}, fieldKey, _objectSpread(_objectSpread({}, themeValues[optionKey]), {}, {\n      value: newVal\n    }))));\n  };\n\n  return __jsx(ThemeFormWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeField, {\n    currentTheme: currentTheme,\n    displayName: themeValues.color.displayName,\n    value: themeValues.color.value,\n    fieldKey: \"color\",\n    updateTheme: updateTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(ThemeFormView, \"IeLqouBLCOUNnHrXLO/NySDzhQQ=\");\n\n_c9 = ThemeFormView;\nexport var ManageThemes = function ManageThemes(_ref4) {\n  _s3();\n\n  var currentTheme = _ref4.theme,\n      setTheme = _ref4.setTheme;\n\n  var _useState3 = useState(null),\n      selectedThemeForm = _useState3[0],\n      setSelectedThemeForm = _useState3[1];\n\n  var _useThemeOptions = useThemeOptions(),\n      themeOptions = _useThemeOptions.themeOptions;\n\n  var onSelectThemeForm = function onSelectThemeForm(formFields) {\n    setSelectedThemeForm(formFields || DefaultTheme);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, selectedThemeForm ? __jsx(ThemeFormView, {\n    currentTheme: theme,\n    initialValues: {\n      color: {\n        value: \"red\",\n        displayName: \"Color\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }) : __jsx(ThemeListView, {\n    themeOptions: themeOptions,\n    currentTheme: currentTheme,\n    onAddOrUpdateTheme: onSelectThemeForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s3(ManageThemes, \"hnhrxtg6vbSnSWKQs6ITlrmu3OI=\", false, function () {\n  return [useThemeOptions];\n});\n\n_c10 = ManageThemes;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"ThemeOptionWrapper\");\n$RefreshReg$(_c2, \"ThemeOption\");\n$RefreshReg$(_c3, \"ThemeListWrapper\");\n$RefreshReg$(_c4, \"ThemeListView\");\n$RefreshReg$(_c5, \"ThemeFieldWrapper\");\n$RefreshReg$(_c6, \"ColorSquare\");\n$RefreshReg$(_c7, \"ThemeField\");\n$RefreshReg$(_c8, \"ThemeFormWrapper\");\n$RefreshReg$(_c9, \"ThemeFormView\");\n$RefreshReg$(_c10, \"ManageThemes\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","faEdit","FontAwesomeIcon","styled","useTheme","useState","useRef","CompactPicker","RelativePop","useThemeOptions","DefaultTheme","ThemeOptionWrapper","div","ThemeOption","theme","onSelectTheme","onEditTheme","currentTheme","name","ThemeListWrapper","props","border","ThemeListView","themeOptions","onAddOrUpdateTheme","editable","editTheme","selectTheme","console","log","textStyle","colors","primary","icon","other","c","map","themeOption","ThemeFieldWrapper","ColorSquare","color","ThemeField","displayName","value","fieldKey","updateTheme","fieldRef","getFieldRef","pickerOpen","setPickerOpen","onChangeComplete","newColor","hex","onTogglePicker","optionRef","horizontal","vertical","surface","text","styles","sizes","large","ThemeFormWrapper","ThemeFormView","initialValues","formType","themeValues","setThemeValues","newVal","optionKey","ManageThemes","setTheme","selectedThemeForm","setSelectedThemeForm","onSelectThemeForm","formFields","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\nimport { DefaultTheme } from \"../../themes/DefaultTheme\";\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ThemeOption = (theme, onSelectTheme, onEditTheme) => {\n\n\n  <ThemeOptionWrapper onClick={onSelectTheme}>\n    <SimpleText {...GridElementHeaderProps(currentTheme)}>{theme.name}</SimpleText>\n    <FontAwesomeIcon onClick={onEditTheme} icon={faEdit}/>\n  </ThemeOptionWrapper>\n  \n}\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeListView = ({ currentTheme, themeOptions, onAddOrUpdateTheme, editable = true }) => {\n  const editTheme = (theme) => {\n    return () => {\n      onAddOrUpdateTheme(theme);\n    }\n  }\n\n  const selectTheme = (theme) => {\n    return () => {\n      console.log(theme);\n    }\n  }\n\n  const textStyle = { ...GridElementHeaderProps(currentTheme)};\n\n  return (\n    <ThemeListWrapper border={currentTheme.border.colors.primary}>\n      {editable && <FontAwesomeIcon\n        icon={faPlusCircle}\n        color={currentTheme.icon.colors.other.c}\n        onClick={onAddOrUpdateTheme}\n      />\n      }\n      {\n        themeOptions.map((themeOption) => {\n          return <ThemeOption theme={themeOption} textStyle={textStyle} onSelectTheme={selectTheme(theme)} onEditTheme={editTheme(themeOption)}/>\n        })\n      }\n    </ThemeListWrapper>\n  );\n};\n\nconst ThemeFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeField = ({\n  currentTheme,\n  displayName,\n  value,\n  fieldKey,\n  updateTheme,\n}) => {\n  const fieldRef = useRef(null);\n  const getFieldRef = () => {\n    return fieldRef;\n  };\n\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onChangeComplete = (newColor) => {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeFieldWrapper ref={optionRef}>\n      <ColorSquare color={value} onClick={onTogglePicker} />\n      {pickerOpen && (\n        <RelativePop\n          height=\"89px\"\n          width=\"245px\"\n          position={{\n            horizontal: 7.5,\n            vertical: 0,\n          }}\n          margin=\"20px 0 0 0\"\n          arrowPosition={3}\n          backgroundColor={currentTheme.surface.colors.primary}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n          getParentRef={getFieldRef}\n        >\n          <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n        </RelativePop>\n      )}\n      <SimpleText\n        color={currentTheme.text.colors.primary}\n        style={currentTheme.text.styles.primary}\n        size={currentTheme.text.sizes.large}\n      >\n        {displayName}\n      </SimpleText>\n    </ThemeFieldWrapper>\n  );\n};\n\nconst ThemeFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst ThemeFormView = ({ currentTheme, initialValues, formType }) => {\n  const [themeValues, setThemeValues] = useState(initialValues);\n\n  const updateTheme = (fieldKey, newVal) => {\n    setThemeValues({\n      ...themeValues,\n      [fieldKey]: { ...themeValues[optionKey], value: newVal },\n    });\n  };\n\n  return (\n    <ThemeFormWrapper>\n      <ThemeField\n        currentTheme={currentTheme}\n        displayName={themeValues.color.displayName}\n        value={themeValues.color.value}\n        fieldKey={\"color\"}\n        updateTheme={updateTheme}\n      ></ThemeField>\n    </ThemeFormWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme: currentTheme, setTheme }) => {\n  const [selectedThemeForm, setSelectedThemeForm] = useState(null);\n  const { themeOptions } = useThemeOptions();\n\n  const onSelectThemeForm = (formFields) => {\n    setSelectedThemeForm(formFields || DefaultTheme);\n  };\n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          {selectedThemeForm ? (\n            <ThemeFormView\n              currentTheme={theme}\n              initialValues={{\n                color: { value: \"red\", displayName: \"Color\" },\n              }}\n            />\n          ) : (\n            <ThemeListView\n              themeOptions={themeOptions}\n              currentTheme={currentTheme}\n              onAddOrUpdateTheme={onSelectThemeForm}\n            />\n          )}\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}