{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nvar ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], function (props) {\n  return \"1px solid \".concat(props.border);\n});\n_c = ThemeListWrapper;\n\nvar ThemeList = function ThemeList(_ref) {\n  var theme = _ref.theme;\n  return __jsx(ThemeListWrapper, {\n    border: theme.border.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: theme.icon.colors.other.c,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\n_c2 = ThemeList;\n\nvar AddOrEditTheme = function AddOrEditTheme(theme) {\n  _s();\n\n  var _useState = useState(theme),\n      themeOptions = _useState[0],\n      setThemeOptions = _useState[1];\n\n  return __jsx(\"form\", {\n    onSubmit: _this.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, _this.props.formType), _this.renderErrors(), __jsx(Fields, {\n    update: _this.update,\n    state: _this.state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(\"input\", {\n    className: \"submit\",\n    type: \"submit\",\n    value: _this.props.formType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(AddOrEditTheme, \"NSRb/sghaNK9pg2lQ/+0+z3so34=\");\n\n_c3 = AddOrEditTheme;\nexport var ManageThemes = function ManageThemes(_ref2) {\n  var theme = _ref2.theme,\n      setTheme = _ref2.setTheme;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeList, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))));\n};\n_c4 = ManageThemes;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ThemeListWrapper\");\n$RefreshReg$(_c2, \"ThemeList\");\n$RefreshReg$(_c3, \"AddOrEditTheme\");\n$RefreshReg$(_c4, \"ManageThemes\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","FontAwesomeIcon","styled","useState","ThemeListWrapper","div","props","border","ThemeList","theme","colors","primary","icon","other","c","AddOrEditTheme","themeOptions","setThemeOptions","handleSubmit","formType","renderErrors","update","state","ManageThemes","setTheme","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeList = ({ theme }) => {\n  return (\n    <ThemeListWrapper border={theme.border.colors.primary}>\n      <FontAwesomeIcon icon={faPlusCircle} color={theme.icon.colors.other.c} />\n      <SimpleText {...GridElementHeaderProps(theme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(theme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst AddOrEditTheme = (theme) => {\n  const [themeOptions, setThemeOptions] = useState(theme);\n\n  return         <form onSubmit={this.handleSubmit}>\n  <fieldset>\n    <legend>{this.props.formType}</legend>\n    { this.renderErrors() }\n    <Fields update={this.update} state={this.state} />\n    <input className='submit' type=\"submit\" value={this.props.formType} />\n  </fieldset>\n</form>\n}\n\nexport const ManageThemes = ({ theme, setTheme }) => {\n  \n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          <ThemeList theme={theme} />\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}