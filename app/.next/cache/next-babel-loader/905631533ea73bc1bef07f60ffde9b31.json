{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var getStatsById = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(statsId) {\n    var response, res, resVal;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:7070/stats/\".concat(2));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resVal = _context.sent;\n\n            if (res.status !== 200) {\n              if (resVal.message) console.log(resVal.message);\n              response = {\n                error: true,\n                stats: null\n              };\n            }\n\n            console.log(resVal);\n            return _context.abrupt(\"return\", stats);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStatsById(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/api/stats_api.js"],"names":["getStatsById","statsId","fetch","res","json","resVal","status","message","console","log","response","error","stats"],"mappings":";;AAAA,OAAO,IAAMA,YAAY;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENC,KAAK,uCAAgC,CAAhC,EAFC;;AAAA;AAElBC,YAAAA,GAFkB;AAAA;AAAA,mBAIHA,GAAG,CAACC,IAAJ,EAJG;;AAAA;AAIlBC,YAAAA,MAJkB;;AAKxB,gBAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpB,kBAAID,MAAM,CAACE,OAAX,EAAoBC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACpBG,cAAAA,QAAQ,GAAG;AAAEC,gBAAAA,KAAK,EAAE,IAAT;AAAeC,gBAAAA,KAAK,EAAE;AAAtB,eAAX;AACH;;AACDJ,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AATwB,6CAUjBO,KAViB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZZ,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["export const getStatsById = async (statsId) => {\n    let response;\n    const res = await fetch(`http://localhost:7070/stats/${2}`);\n\n    const resVal = await res.json();\n    if (res.status !== 200) {\n        if (resVal.message) console.log(resVal.message);\n        response = { error: true, stats: null };\n    }\n    console.log(resVal);\n    return stats;\n}"]},"metadata":{},"sourceType":"module"}