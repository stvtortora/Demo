{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/demo/app/src/components/CoreUI/Text/SimpleText.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { font } from \"../../../utils/styleUtils/fontUtils\";\nimport { memo } from \"react\";\nimport { sanitizeNumericVals } from \"../../../utils/styleUtils/generalCSSUtils\";\nexport var StyledText = styled.div.withConfig({\n  displayName: \"SimpleText__StyledText\",\n  componentId: \"sc-1los7xv-0\"\n})([\"\", \"\"], function (_ref) {\n  var padding = _ref.padding,\n      margin = _ref.margin,\n      moreStyles = _ref.moreStyles,\n      fontProps = _objectWithoutProperties(_ref, [\"padding\", \"margin\", \"moreStyles\"]);\n\n  return \"\\n    padding: \".concat(padding, \";\\n    margin: \").concat(margin, \";\\n    \").concat(font(fontProps), \";\\n    \").concat(moreStyles, \";\\n    \");\n});\n_c = StyledText;\nexport var SimpleText = memo(_c2 = function _c2(_ref2) {\n  var children = _ref2.children,\n      style = _ref2.style,\n      size = _ref2.size,\n      color = _ref2.color,\n      backgroundColor = _ref2.backgroundColor,\n      weight = _ref2.weight,\n      lowerCase = _ref2.lowerCase,\n      padding = _ref2.padding,\n      _ref2$margin = _ref2.margin,\n      margin = _ref2$margin === void 0 ? \"4px\" : _ref2$margin,\n      moreStyles = _ref2.moreStyles,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"style\", \"size\", \"color\", \"backgroundColor\", \"weight\", \"lowerCase\", \"padding\", \"margin\", \"moreStyles\"]);\n\n  var _sanitizeNumericVals = sanitizeNumericVals({\n    size: size,\n    padding: padding,\n    margin: margin\n  }),\n      sanitizedSize = _sanitizeNumericVals.size,\n      sanitizedPadding = _sanitizeNumericVals.padding,\n      sanitizedMargin = _sanitizeNumericVals.margin;\n\n  return __jsx(StyledText, _extends({\n    family: style // style is a reserved keyword for html elements, so we use 'family' here instead\n    ,\n    size: sanitizedSize,\n    color: color,\n    backgroundColor: backgroundColor,\n    weight: weight,\n    lowerCase: lowerCase,\n    padding: sanitizedPadding,\n    margin: sanitizedMargin,\n    moreStyles: moreStyles\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), children);\n});\n_c3 = SimpleText;\nSimpleText.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  weight: PropTypes.number,\n  lowerCase: PropTypes.bool,\n  padding: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  margin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  moreStyles: PropTypes.string\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledText\");\n$RefreshReg$(_c2, \"SimpleText$memo\");\n$RefreshReg$(_c3, \"SimpleText\");","map":{"version":3,"sources":["/Users/steven/Documents/demo/app/src/components/CoreUI/Text/SimpleText.jsx"],"names":["PropTypes","styled","font","memo","sanitizeNumericVals","StyledText","div","padding","margin","moreStyles","fontProps","SimpleText","children","style","size","color","backgroundColor","weight","lowerCase","props","sanitizedSize","sanitizedPadding","sanitizedMargin","propTypes","node","string","number","bool","oneOfType"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,qCAArB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,SAASC,mBAAT,QAAoC,2CAApC;AAEA,OAAO,IAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,aACnB,gBAAmD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAhBC,SAAgB;;AACnD,kCACWH,OADX,4BAEUC,MAFV,oBAGEN,IAAI,CAACQ,SAAD,CAHN,oBAIED,UAJF;AAMD,CARoB,CAAhB;KAAMJ,U;AAWb,OAAO,IAAMM,UAAU,GAAGR,IAAI,OAC5B,oBAYM;AAAA,MAXJS,QAWI,SAXJA,QAWI;AAAA,MAVJC,KAUI,SAVJA,KAUI;AAAA,MATJC,IASI,SATJA,IASI;AAAA,MARJC,KAQI,SARJA,KAQI;AAAA,MAPJC,eAOI,SAPJA,eAOI;AAAA,MANJC,MAMI,SANJA,MAMI;AAAA,MALJC,SAKI,SALJA,SAKI;AAAA,MAJJX,OAII,SAJJA,OAII;AAAA,2BAHJC,MAGI;AAAA,MAHJA,MAGI,6BAHK,KAGL;AAAA,MAFJC,UAEI,SAFJA,UAEI;AAAA,MADDU,KACC;;AAAA,6BAKAf,mBAAmB,CAAC;AAAEU,IAAAA,IAAI,EAAJA,IAAF;AAAQP,IAAAA,OAAO,EAAPA,OAAR;AAAiBC,IAAAA,MAAM,EAANA;AAAjB,GAAD,CALnB;AAAA,MAEIY,aAFJ,wBAEFN,IAFE;AAAA,MAGOO,gBAHP,wBAGFd,OAHE;AAAA,MAIMe,eAJN,wBAIFd,MAJE;;AAMJ,SACE,MAAC,UAAD;AACE,IAAA,MAAM,EAAEK,KADV,CACiB;AADjB;AAEE,IAAA,IAAI,EAAEO,aAFR;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,OAAO,EAAEG,gBAPX;AAQE,IAAA,MAAM,EAAEC,eARV;AASE,IAAA,UAAU,EAAEb;AATd,KAUMU,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYGP,QAZH,CADF;AAgBD,CAnC2B,CAAvB;MAAMD,U;AAsCbA,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,QAAQ,EAAEZ,SAAS,CAACwB,IADC;AAErBX,EAAAA,KAAK,EAAEb,SAAS,CAACyB,MAFI;AAGrBX,EAAAA,IAAI,EAAEd,SAAS,CAACyB,MAHK;AAIrBV,EAAAA,KAAK,EAAEf,SAAS,CAACyB,MAJI;AAKrBT,EAAAA,eAAe,EAAEhB,SAAS,CAACyB,MALN;AAMrBR,EAAAA,MAAM,EAAEjB,SAAS,CAAC0B,MANG;AAOrBR,EAAAA,SAAS,EAAElB,SAAS,CAAC2B,IAPA;AAQrBpB,EAAAA,OAAO,EAAEP,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAAC0B,MAA7B,CAApB,CARY;AASrBlB,EAAAA,MAAM,EAAER,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAAC0B,MAA7B,CAApB,CATa;AAUrBjB,EAAAA,UAAU,EAAET,SAAS,CAACyB;AAVD,CAAvB","sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { font } from \"../../../utils/styleUtils/fontUtils\";\nimport { memo } from \"react\";\nimport { sanitizeNumericVals } from \"../../../utils/styleUtils/generalCSSUtils\";\n\nexport const StyledText = styled.div`\n  ${({ padding, margin, moreStyles, ...fontProps }) => {\n    return `\n    padding: ${padding};\n    margin: ${margin};\n    ${font(fontProps)};\n    ${moreStyles};\n    `;\n  }}\n`;\n\nexport const SimpleText = memo(\n  ({\n    children,\n    style,\n    size,\n    color,\n    backgroundColor,\n    weight,\n    lowerCase,\n    padding,\n    margin = \"4px\",\n    moreStyles,\n    ...props\n  }) => {\n    const {\n      size: sanitizedSize,\n      padding: sanitizedPadding,\n      margin: sanitizedMargin,\n    } = sanitizeNumericVals({ size, padding, margin });\n    return (\n      <StyledText\n        family={style} // style is a reserved keyword for html elements, so we use 'family' here instead\n        size={sanitizedSize}\n        color={color}\n        backgroundColor={backgroundColor}\n        weight={weight}\n        lowerCase={lowerCase}\n        padding={sanitizedPadding}\n        margin={sanitizedMargin}\n        moreStyles={moreStyles}\n        {...props}\n      >\n        {children}\n      </StyledText>\n    );\n  }\n);\n\nSimpleText.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  weight: PropTypes.number,\n  lowerCase: PropTypes.bool,\n  padding: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  margin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  moreStyles: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}