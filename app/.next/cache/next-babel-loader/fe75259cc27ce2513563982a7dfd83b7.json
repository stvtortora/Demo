{"ast":null,"code":"import { getThemes, updateTheme, createTheme, deleteTheme } from \"../api/theme_api\";\nimport { useEffect, useState } from \"react\";\nexport const useThemeOptions = () => {\n  const {\n    0: themeOptions,\n    1: setThemeOptions\n  } = useState();\n  useEffect(() => {\n    const callGetThemes = async () => {\n      const options = await getThemes();\n      setThemeOptions(options);\n    };\n\n    callGetThemes();\n  }, []);\n\n  const onUpdateTheme = async theme => {\n    const updatedTheme = await updateTheme(theme);\n    const updatedThemeOptions = themeOptions.map(theme => theme.id !== updatedTheme.id ? theme : updatedTheme);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onCreateTheme = async theme => {\n    const newTheme = await createTheme(theme);\n    const updatedThemeOptions = themeOptions.concat([newTheme]);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onDeleteTheme = async themeId => {\n    await deleteTheme(themeId);\n    const updatedThemeOptions = themeOptions.filter(theme => theme.id !== themeId);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  return {\n    themeOptions,\n    onUpdateTheme,\n    onCreateTheme,\n    onDeleteTheme\n  };\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/hooks/useThemeOptions.jsx"],"names":["getThemes","updateTheme","createTheme","deleteTheme","useEffect","useState","useThemeOptions","themeOptions","setThemeOptions","callGetThemes","options","onUpdateTheme","theme","updatedTheme","updatedThemeOptions","map","id","onCreateTheme","newTheme","concat","onDeleteTheme","themeId","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,EAA8CC,WAA9C,QAAiE,kBAAjE;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCH,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,aAAa,GAAG,YAAY;AAC9B,YAAMC,OAAO,GAAG,MAAMV,SAAS,EAA/B;AACAQ,MAAAA,eAAe,CAACE,OAAD,CAAf;AACH,KAHD;;AAKAD,IAAAA,aAAa;AAChB,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAMC,YAAY,GAAG,MAAMZ,WAAW,CAACW,KAAD,CAAtC;AACA,UAAME,mBAAmB,GAAGP,YAAY,CAACQ,GAAb,CAAiBH,KAAK,IAAIA,KAAK,CAACI,EAAN,KAAaH,YAAY,CAACG,EAA1B,GAA+BJ,KAA/B,GAAuCC,YAAjE,CAA5B;AACAL,IAAAA,eAAe,CAACM,mBAAD,CAAf;AACH,GAJD;;AAMA,QAAMG,aAAa,GAAG,MAAOL,KAAP,IAAiB;AACnC,UAAMM,QAAQ,GAAG,MAAMhB,WAAW,CAACU,KAAD,CAAlC;AACA,UAAME,mBAAmB,GAAGP,YAAY,CAACY,MAAb,CAAoB,CAACD,QAAD,CAApB,CAA5B;AACAV,IAAAA,eAAe,CAACM,mBAAD,CAAf;AACH,GAJD;;AAMA,QAAMM,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACrC,UAAMlB,WAAW,CAACkB,OAAD,CAAjB;AACA,UAAMP,mBAAmB,GAAGP,YAAY,CAACe,MAAb,CAAoBV,KAAK,IAAIA,KAAK,CAACI,EAAN,KAAaK,OAA1C,CAA5B;AACAb,IAAAA,eAAe,CAACM,mBAAD,CAAf;AACH,GAJD;;AAMA,SAAO;AAAEP,IAAAA,YAAF;AAAgBI,IAAAA,aAAhB;AAA+BM,IAAAA,aAA/B;AAA8CG,IAAAA;AAA9C,GAAP;AACH,CA/BM","sourcesContent":["import { getThemes, updateTheme, createTheme, deleteTheme } from \"../api/theme_api\"\nimport { useEffect, useState } from \"react\";\n\n\nexport const useThemeOptions = () => {\n    const [themeOptions, setThemeOptions] = useState();\n\n    useEffect(() => {\n        const callGetThemes = async () => {\n            const options = await getThemes();  \n            setThemeOptions(options);  \n        }\n\n        callGetThemes();\n    }, []);\n\n    const onUpdateTheme = async (theme) => {\n        const updatedTheme = await updateTheme(theme);\n        const updatedThemeOptions = themeOptions.map(theme => theme.id !== updatedTheme.id ? theme : updatedTheme);\n        setThemeOptions(updatedThemeOptions);\n    }\n\n    const onCreateTheme = async (theme) => {\n        const newTheme = await createTheme(theme);\n        const updatedThemeOptions = themeOptions.concat([newTheme]);\n        setThemeOptions(updatedThemeOptions);\n    }\n\n    const onDeleteTheme = async (themeId) => {\n        await deleteTheme(themeId);\n        const updatedThemeOptions = themeOptions.filter(theme => theme.id !== themeId);\n        setThemeOptions(updatedThemeOptions);\n    }\n\n    return { themeOptions, onUpdateTheme, onCreateTheme, onDeleteTheme }\n}"]},"metadata":{},"sourceType":"module"}