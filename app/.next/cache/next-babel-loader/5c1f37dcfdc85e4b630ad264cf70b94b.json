{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nconst ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], props => `1px solid ${props.border}`);\n\nconst ThemeList = ({\n  theme\n}) => {\n  return __jsx(ThemeListWrapper, {\n    border: theme.border.colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: theme.icon.colors.other.c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\nconst Fields = ({\n  update,\n  themeOptions\n}) => {\n  __jsx(FieldsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Order Name \", __jsx(\"span\", {\n    className: \"required-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    value: state.name,\n    name: \"name\",\n    onChange: update('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"data_package_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Data Package Type \", __jsx(\"span\", {\n    className: \"required-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, \"*\")), __jsx(\"select\", {\n    value: state.data_package_type,\n    name: \"data_package_type\",\n    onChange: update('data_package_type'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(\"option\", {\n    value: \"Device Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Device Location\"), __jsx(\"option\", {\n    value: \"Device Behavior\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Device Behavior\"), __jsx(\"option\", {\n    value: \"ID Mapping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"ID Mapping\"))), __jsx(\"label\", {\n    htmlFor: \"max_bid_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Max Bid Price \", __jsx(\"span\", {\n    className: \"required-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"*\")), __jsx(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"1000000000000000\",\n    step: \"0.01\",\n    value: state.max_bid_price,\n    name: \"max_bid_price\",\n    onChange: update('max_bid_price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst AddOrEditTheme = ({\n  theme,\n  formType\n}) => {\n  const {\n    0: themeOptions,\n    1: setThemeOptions\n  } = useState(theme);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, formType), renderErrors(), __jsx(Fields, {\n    update: update,\n    themeOptions: themeOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    className: \"submit\",\n    type: \"submit\",\n    value: this.props.formType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const ManageThemes = ({\n  theme,\n  setTheme\n}) => {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeList, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","FontAwesomeIcon","styled","useState","ThemeListWrapper","div","props","border","ThemeList","theme","colors","primary","icon","other","c","Fields","update","themeOptions","state","name","data_package_type","max_bid_price","AddOrEditTheme","formType","setThemeOptions","handleSubmit","renderErrors","ManageThemes","setTheme","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeList = ({ theme }) => {\n  return (\n    <ThemeListWrapper border={theme.border.colors.primary}>\n      <FontAwesomeIcon icon={faPlusCircle} color={theme.icon.colors.other.c} />\n      <SimpleText {...GridElementHeaderProps(theme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(theme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst Fields = ({ update, themeOptions }) => {\n  <FieldsWrapper>\n  <label htmlFor=\"name\">\n    <span>Order Name <span className='required-field'>*</span></span>\n    <input\n    type=\"text\"\n    value={state.name}\n    name=\"name\"\n    onChange={update('name')} />\n  </label>\n\n  <label htmlFor=\"data_package_type\">\n    <span>Data Package Type <span className='required-field'>*</span></span>\n    <select\n    value={state.data_package_type}\n    name=\"data_package_type\"\n    onChange={update('data_package_type')}>\n      <option value=\"\"></option>\n      <option value=\"Device Location\">Device Location</option>\n      <option value=\"Device Behavior\">Device Behavior</option>\n      <option value=\"ID Mapping\">ID Mapping</option>\n    </select>\n  </label>\n\n  <label htmlFor=\"max_bid_price\">\n    <span>Max Bid Price <span className='required-field'>*</span></span>\n    <input\n    type=\"number\"\n    min=\"0\"\n    max=\"1000000000000000\"\n    step=\"0.01\"\n    value={state.max_bid_price}\n    name=\"max_bid_price\"\n    onChange={update('max_bid_price')} />\n  </label>\n</FieldsWrapper>\n}\n\nconst AddOrEditTheme = ({ theme, formType }) => {\n  const [themeOptions, setThemeOptions] = useState(theme);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset>\n        <legend>{formType}</legend>\n        {renderErrors()}\n        <Fields update={update} themeOptions={themeOptions} />\n        <input className=\"submit\" type=\"submit\" value={this.props.formType} />\n      </fieldset>\n    </form>\n  );\n};\n\nexport const ManageThemes = ({ theme, setTheme }) => {\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          <ThemeList theme={theme} />\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}