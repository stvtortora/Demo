{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/demo/demo_app/src/components/CoreUI/Auxiliary/WithContainerDimensions.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useElementDimensions } from \"../../../hooks/useElementDimensions\";\nimport { useId } from \"react-id-generator\";\nimport PropTypes from \"prop-types\";\nexport const WithContainerDimensions = ({\n  Component,\n  componentProps = {}\n}) => {\n  const elementId = useId()[0];\n  const elementDimensions = useElementDimensions(elementId);\n\n  if (!elementDimensions) {\n    return __jsx(\"div\", {\n      id: elementId,\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const {\n    height,\n    width\n  } = elementDimensions;\n  return __jsx(Component, _extends({}, componentProps, {\n    height: height,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n};\nWithContainerDimensions.propTypes = {\n  Component: PropTypes.func.isRequired,\n  componentProps: PropTypes.object\n};","map":{"version":3,"sources":["/Users/steven/Documents/demo/demo_app/src/components/CoreUI/Auxiliary/WithContainerDimensions.jsx"],"names":["useElementDimensions","useId","PropTypes","WithContainerDimensions","Component","componentProps","elementId","elementDimensions","height","width","propTypes","func","isRequired","object"],"mappings":";;;;;;AAAA,SAASA,oBAAT,QAAqC,qCAArC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,cAAc,GAAG;AAA9B,CAAD,KAAwC;AAC7E,QAAMC,SAAS,GAAGL,KAAK,GAAG,CAAH,CAAvB;AAEA,QAAMM,iBAAiB,GAAGP,oBAAoB,CAACM,SAAD,CAA9C;;AAEA,MAAI,CAACC,iBAAL,EAAwB;AACtB,WAAO;AAAK,MAAA,EAAE,EAAED,SAAT;AAAoB,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAM;AAAEA,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,iBAA1B;AAEA,SAAO,MAAC,SAAD,eAAeF,cAAf;AAA+B,IAAA,MAAM,EAAEG,MAAvC;AAA+C,IAAA,KAAK,EAAEC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAZM;AAcPN,uBAAuB,CAACO,SAAxB,GAAoC;AAClCN,EAAAA,SAAS,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADQ;AAElCP,EAAAA,cAAc,EAAEH,SAAS,CAACW;AAFQ,CAApC","sourcesContent":["import { useElementDimensions } from \"../../../hooks/useElementDimensions\";\nimport { useId } from \"react-id-generator\";\nimport PropTypes from \"prop-types\";\n\nexport const WithContainerDimensions = ({ Component, componentProps = {} }) => {\n  const elementId = useId()[0];\n\n  const elementDimensions = useElementDimensions(elementId);\n\n  if (!elementDimensions) {\n    return <div id={elementId} style={{ height: \"100%\" }} />;\n  }\n\n  const { height, width } = elementDimensions;\n\n  return <Component {...componentProps} height={height} width={width} />;\n};\n\nWithContainerDimensions.propTypes = {\n  Component: PropTypes.func.isRequired,\n  componentProps: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}