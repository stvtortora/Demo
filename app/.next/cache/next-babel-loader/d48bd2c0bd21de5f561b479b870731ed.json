{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getThemes, updateTheme, createTheme, deleteTheme } from \"../api/theme_api\";\nimport { useEffect, useState } from \"react\";\nimport defaultThemeValues from \"../themes/defaultThemeValues\";\n\nvar defaultTheme = _objectSpread(_objectSpread({}, defaultThemeValues), {}, {\n  name: \"Default\"\n});\n\nexport var useThemeOptions = function useThemeOptions() {\n  _s();\n\n  var _useState = useState([defaultTheme]),\n      themeOptions = _useState[0],\n      setThemeOptions = _useState[1];\n\n  useEffect(function () {\n    var callGetThemes = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getThemes, response, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getThemes();\n\n              case 2:\n                _yield$getThemes = _context.sent;\n                response = _yield$getThemes.response;\n                error = _yield$getThemes.error;\n\n                if (!error) {\n                  setThemeOptions([defaultTheme].concat(response));\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function callGetThemes() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    callGetThemes();\n  }, []);\n\n  var onUpdateTheme = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(theme) {\n      var updatedTheme, updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return updateTheme(theme);\n\n            case 2:\n              updatedTheme = _context2.sent;\n              updatedThemeOptions = themeOptions.map(function (theme) {\n                return theme.id !== updatedTheme.id ? theme : updatedTheme;\n              });\n              setThemeOptions(updatedThemeOptions);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onUpdateTheme(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onCreateTheme = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(theme) {\n      var newTheme, updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return createTheme(theme);\n\n            case 2:\n              newTheme = _context3.sent;\n              updatedThemeOptions = themeOptions.concat([newTheme]);\n              setThemeOptions(updatedThemeOptions);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onCreateTheme(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onDeleteTheme = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(themeId) {\n      var updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return deleteTheme(themeId);\n\n            case 2:\n              updatedThemeOptions = themeOptions.filter(function (theme) {\n                return theme.id !== themeId;\n              });\n              setThemeOptions(updatedThemeOptions);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onDeleteTheme(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return {\n    error: error,\n    themeOptions: themeOptions,\n    onUpdateTheme: onUpdateTheme,\n    onCreateTheme: onCreateTheme,\n    onDeleteTheme: onDeleteTheme\n  };\n};\n\n_s(useThemeOptions, \"n2XyTF7hw2LBJsXMGCvGUe9k2YA=\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/hooks/useThemeOptions.jsx"],"names":["getThemes","updateTheme","createTheme","deleteTheme","useEffect","useState","defaultThemeValues","defaultTheme","name","useThemeOptions","themeOptions","setThemeOptions","callGetThemes","response","error","concat","onUpdateTheme","theme","updatedTheme","updatedThemeOptions","map","id","onCreateTheme","newTheme","onDeleteTheme","themeId","filter"],"mappings":";;;;;;;;;;AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;;AAEA,IAAMC,YAAY,mCAAQD,kBAAR;AAA4BE,EAAAA,IAAI,EAAE;AAAlC,EAAlB;;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACKJ,QAAQ,CAAC,CAACE,YAAD,CAAD,CADb;AAAA,MAC5BG,YAD4B;AAAA,MACdC,eADc;;AAGnCP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,aAAa;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACcZ,SAAS,EADvB;;AAAA;AAAA;AACZa,gBAAAA,QADY,oBACZA,QADY;AACFC,gBAAAA,KADE,oBACFA,KADE;;AAEpB,oBAAI,CAACA,KAAL,EAAY;AACVH,kBAAAA,eAAe,CAAC,CAACJ,YAAD,EAAeQ,MAAf,CAAsBF,QAAtB,CAAD,CAAf;AACD;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAbD,aAAa;AAAA;AAAA;AAAA,OAAnB;;AAOAA,IAAAA,aAAa;AACd,GATQ,EASN,EATM,CAAT;;AAWA,MAAMI,aAAa;AAAA,yEAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOhB,WAAW,CAACgB,KAAD,CADlB;;AAAA;AACdC,cAAAA,YADc;AAEdC,cAAAA,mBAFc,GAEQT,YAAY,CAACU,GAAb,CAAiB,UAACH,KAAD;AAAA,uBAC3CA,KAAK,CAACI,EAAN,KAAaH,YAAY,CAACG,EAA1B,GAA+BJ,KAA/B,GAAuCC,YADI;AAAA,eAAjB,CAFR;AAKpBP,cAAAA,eAAe,CAACQ,mBAAD,CAAf;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAQA,MAAMM,aAAa;AAAA,yEAAG,kBAAOL,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGf,WAAW,CAACe,KAAD,CADd;;AAAA;AACdM,cAAAA,QADc;AAEdJ,cAAAA,mBAFc,GAEQT,YAAY,CAACK,MAAb,CAAoB,CAACQ,QAAD,CAApB,CAFR;AAGpBZ,cAAAA,eAAe,CAACQ,mBAAD,CAAf;;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbG,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAMA,MAAME,aAAa;AAAA,yEAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdtB,WAAW,CAACsB,OAAD,CADG;;AAAA;AAEdN,cAAAA,mBAFc,GAEQT,YAAY,CAACgB,MAAb,CAC1B,UAACT,KAAD;AAAA,uBAAWA,KAAK,CAACI,EAAN,KAAaI,OAAxB;AAAA,eAD0B,CAFR;AAKpBd,cAAAA,eAAe,CAACQ,mBAAD,CAAf;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbK,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAQA,SAAO;AAAEV,IAAAA,KAAK,EAALA,KAAF;AAASJ,IAAAA,YAAY,EAAZA,YAAT;AAAuBM,IAAAA,aAAa,EAAbA,aAAvB;AAAsCM,IAAAA,aAAa,EAAbA,aAAtC;AAAqDE,IAAAA,aAAa,EAAbA;AAArD,GAAP;AACD,CArCM;;GAAMf,e","sourcesContent":["import {\n  getThemes,\n  updateTheme,\n  createTheme,\n  deleteTheme,\n} from \"../api/theme_api\";\nimport { useEffect, useState } from \"react\";\nimport defaultThemeValues from \"../themes/defaultThemeValues\";\n\nconst defaultTheme = { ...defaultThemeValues, name: \"Default\" };\n\nexport const useThemeOptions = () => {\n  const [themeOptions, setThemeOptions] = useState([defaultTheme]);\n\n  useEffect(() => {\n    const callGetThemes = async () => {\n      const { response, error } = await getThemes();\n      if (!error) {\n        setThemeOptions([defaultTheme].concat(response));\n      }\n    };\n\n    callGetThemes();\n  }, []);\n\n  const onUpdateTheme = async (theme) => {\n    const updatedTheme = await updateTheme(theme);\n    const updatedThemeOptions = themeOptions.map((theme) =>\n      theme.id !== updatedTheme.id ? theme : updatedTheme\n    );\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onCreateTheme = async (theme) => {\n    const newTheme = await createTheme(theme);\n    const updatedThemeOptions = themeOptions.concat([newTheme]);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onDeleteTheme = async (themeId) => {\n    await deleteTheme(themeId);\n    const updatedThemeOptions = themeOptions.filter(\n      (theme) => theme.id !== themeId\n    );\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  return { error, themeOptions, onUpdateTheme, onCreateTheme, onDeleteTheme };\n};\n"]},"metadata":{},"sourceType":"module"}