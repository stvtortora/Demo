{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nvar ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], function (props) {\n  return \"1px solid \".concat(props.border);\n});\n_c = ThemeListWrapper;\n\nvar ThemeList = function ThemeList(_ref) {\n  var theme = _ref.theme;\n  return __jsx(ThemeListWrapper, {\n    border: theme.border.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: theme.icon.colors.other.c,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\n_c2 = ThemeList;\nvar ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"npadpy-1\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:10px;\"]);\n_c3 = ThemeOptionWrapper;\nvar ColorSquare = styled.div.withConfig({\n  displayName: \"manage_themes__ColorSquare\",\n  componentId: \"npadpy-2\"\n})([\"display:flex;align-items:center;background-color:\", \";height:15px;width:15px;&:hover{cursor:pointer;}\"], function (props) {\n  return props.color;\n});\n_c4 = ColorSquare;\n\nvar ThemeOption = function ThemeOption(_ref2) {\n  _s();\n\n  var currentTheme = _ref2.currentTheme,\n      displayName = _ref2.displayName,\n      value = _ref2.value,\n      optionKey = _ref2.optionKey,\n      updateTheme = _ref2.updateTheme;\n  var optionRef = useRef(null);\n\n  var getOptionRef = function getOptionRef() {\n    return optionRef;\n  };\n\n  var _useState = useState(false),\n      pickerOpen = _useState[0],\n      setPickerOpen = _useState[1];\n\n  var onChangeComplete = function onChangeComplete(newColor) {\n    updateTheme(optionKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  var onTogglePicker = function onTogglePicker() {\n    return setPickerOpen(!pickerOpen);\n  };\n\n  return __jsx(ThemeOptionWrapper, {\n    ref: optionRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(ColorSquare, {\n    color: value,\n    onClick: onTogglePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), pickerOpen && __jsx(RelativePop, {\n    height: \"89px\",\n    width: \"245px\",\n    position: {\n      horizontal: 7.5,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getOptionRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), __jsx(SimpleText, {\n    color: currentTheme.text.colors.primary,\n    style: currentTheme.text.styles.primary,\n    size: currentTheme.text.sizes.large,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, displayName));\n};\n\n_s(ThemeOption, \"6PqREPKucWIK4mAU/NpCvNtiqgQ=\");\n\n_c5 = ThemeOption;\nvar ThemeFormWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFormWrapper\",\n  componentId: \"npadpy-3\"\n})([\"display:flex;flex-direction:column;justify-content:center;margin:20px;\"]);\n_c6 = ThemeFormWrapper;\n\nvar ThemeForm = function ThemeForm(_ref3) {\n  _s2();\n\n  var currentTheme = _ref3.currentTheme,\n      initialThemeOptions = _ref3.initialThemeOptions,\n      formType = _ref3.formType;\n\n  var _useState2 = useState(initialThemeOptions),\n      themeOptions = _useState2[0],\n      setThemeOptions = _useState2[1];\n\n  var updateTheme = function updateTheme(optionKey, newVal) {\n    setThemeOptions(_objectSpread(_objectSpread({}, themeOptions), {}, _defineProperty({}, optionKey, _objectSpread(_objectSpread({}, themeOptions[optionKey]), {}, {\n      value: newVal\n    }))));\n  };\n\n  return __jsx(ThemeFormWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeOption, {\n    currentTheme: currentTheme,\n    displayName: themeOptions.color.displayName,\n    value: themeOptions.color.value,\n    optionKey: \"color\",\n    updateTheme: updateTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(ThemeForm, \"o44deVG/MZG30naoB/dUJyg7XiY=\");\n\n_c7 = ThemeForm;\nexport var ManageThemes = function ManageThemes(_ref4) {\n  var theme = _ref4.theme,\n      setTheme = _ref4.setTheme;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeForm, {\n    currentTheme: theme,\n    initialThemeOptions: {\n      color: {\n        value: \"red\",\n        displayName: \"Color\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))));\n};\n_c8 = ManageThemes;\n{\n  /* <ThemeList theme={theme} /> */\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ThemeListWrapper\");\n$RefreshReg$(_c2, \"ThemeList\");\n$RefreshReg$(_c3, \"ThemeOptionWrapper\");\n$RefreshReg$(_c4, \"ColorSquare\");\n$RefreshReg$(_c5, \"ThemeOption\");\n$RefreshReg$(_c6, \"ThemeFormWrapper\");\n$RefreshReg$(_c7, \"ThemeForm\");\n$RefreshReg$(_c8, \"ManageThemes\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","FontAwesomeIcon","styled","useState","useRef","CompactPicker","RelativePop","ThemeListWrapper","div","props","border","ThemeList","theme","colors","primary","icon","other","c","ThemeOptionWrapper","ColorSquare","color","ThemeOption","currentTheme","displayName","value","optionKey","updateTheme","optionRef","getOptionRef","pickerOpen","setPickerOpen","onChangeComplete","newColor","hex","onTogglePicker","horizontal","vertical","surface","text","styles","sizes","large","ThemeFormWrapper","ThemeForm","initialThemeOptions","formType","themeOptions","setThemeOptions","newVal","ManageThemes","setTheme","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeList = ({ theme }) => {\n  return (\n    <ThemeListWrapper border={theme.border.colors.primary}>\n      <FontAwesomeIcon icon={faPlusCircle} color={theme.icon.colors.other.c} />\n      <SimpleText {...GridElementHeaderProps(theme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(theme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeOption = ({\n  currentTheme,\n  displayName,\n  value,\n  optionKey,\n  updateTheme,\n}) => {\n  const optionRef = useRef(null);\n  const getOptionRef = () => {\n    return optionRef;\n  };\n\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onChangeComplete = (newColor) => {\n    updateTheme(optionKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeOptionWrapper ref={optionRef}>\n      <ColorSquare color={value} onClick={onTogglePicker} />\n      {pickerOpen && (\n        <RelativePop\n          height=\"89px\"\n          width=\"245px\"\n          position={{\n            horizontal: 7.5,\n            vertical: 0,\n          }}\n          margin=\"20px 0 0 0\"\n          arrowPosition={3}\n          backgroundColor={currentTheme.surface.colors.primary}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n          getParentRef={getOptionRef}\n        >\n          <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n        </RelativePop>\n      )}\n      <SimpleText\n        color={currentTheme.text.colors.primary}\n        style={currentTheme.text.styles.primary}\n        size={currentTheme.text.sizes.large}\n      >\n        {displayName}\n      </SimpleText>\n    </ThemeOptionWrapper>\n  );\n};\n\nconst ThemeFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst ThemeForm = ({ currentTheme, initialThemeOptions, formType }) => {\n  const [themeOptions, setThemeOptions] = useState(initialThemeOptions);\n\n  const updateTheme = (optionKey, newVal) => {\n    setThemeOptions({\n      ...themeOptions,\n      [optionKey]: { ...themeOptions[optionKey], value: newVal },\n    });\n  };\n\n  return (\n    <ThemeFormWrapper>\n      <ThemeOption\n        currentTheme={currentTheme}\n        displayName={themeOptions.color.displayName}\n        value={themeOptions.color.value}\n        optionKey={\"color\"}\n        updateTheme={updateTheme}\n      ></ThemeOption>\n    </ThemeFormWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme, setTheme }) => {\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          <ThemeForm\n            currentTheme={theme}\n            initialThemeOptions={{\n              color: { value: \"red\", displayName: \"Color\" },\n            }}\n          />\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n{\n  /* <ThemeList theme={theme} /> */\n}\n"]},"metadata":{},"sourceType":"module"}