{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\nconst ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], props => `1px solid ${props.border}`);\n\nconst ThemeListView = ({\n  currentTheme,\n  themeOptions,\n  onAddOrUpdateTheme\n}) => {\n  return __jsx(ThemeListWrapper, {\n    border: currentTheme.border.colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: currentTheme.icon.colors.other.c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), themeOptions.map(themeOption => {}), __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\nconst ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"npadpy-1\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:10px;\"]);\nconst ColorSquare = styled.div.withConfig({\n  displayName: \"manage_themes__ColorSquare\",\n  componentId: \"npadpy-2\"\n})([\"background-color:\", \";height:15px;width:15px;&:hover{cursor:pointer;}\"], props => props.color);\n\nconst ThemeOption = ({\n  currentTheme,\n  displayName,\n  value,\n  optionKey,\n  updateTheme\n}) => {\n  const optionRef = useRef(null);\n\n  const getOptionRef = () => {\n    return optionRef;\n  };\n\n  const {\n    0: pickerOpen,\n    1: setPickerOpen\n  } = useState(false);\n\n  const onChangeComplete = newColor => {\n    updateTheme(optionKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return __jsx(ThemeOptionWrapper, {\n    ref: optionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(ColorSquare, {\n    color: value,\n    onClick: onTogglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), pickerOpen && __jsx(RelativePop, {\n    height: \"89px\",\n    width: \"245px\",\n    position: {\n      horizontal: 7.5,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getOptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), __jsx(SimpleText, {\n    color: currentTheme.text.colors.primary,\n    style: currentTheme.text.styles.primary,\n    size: currentTheme.text.sizes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, displayName));\n};\n\nconst ThemeFormWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFormWrapper\",\n  componentId: \"npadpy-3\"\n})([\"display:flex;flex-direction:column;justify-content:center;margin:20px;\"]);\n\nconst ThemeFormView = ({\n  currentTheme,\n  initialThemeOptions,\n  formType\n}) => {\n  const {\n    0: themeOptions,\n    1: setThemeOptions\n  } = useState(initialThemeOptions);\n\n  const updateTheme = (optionKey, newVal) => {\n    setThemeOptions(_objectSpread(_objectSpread({}, themeOptions), {}, {\n      [optionKey]: _objectSpread(_objectSpread({}, themeOptions[optionKey]), {}, {\n        value: newVal\n      })\n    }));\n  };\n\n  return __jsx(ThemeFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeOption, {\n    currentTheme: currentTheme,\n    displayName: themeOptions.color.displayName,\n    value: themeOptions.color.value,\n    optionKey: \"color\",\n    updateTheme: updateTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const ManageThemes = ({\n  theme: currentTheme,\n  setTheme\n}) => {\n  const {\n    0: selectedThemeForm,\n    1: setSelectedThemeForm\n  } = useState(null);\n  const {\n    themeOptions\n  } = useThemeOptions();\n\n  const onSelectThemeForm = formFields => {\n    setSelectedThemeForm(formFields);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, activeFormOptions ? __jsx(ThemeFormView, {\n    currentTheme: theme,\n    initialValues: {\n      color: {\n        value: \"red\",\n        displayName: \"Color\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }) : __jsx(ThemeListView, {\n    themeOptions: themeOptions,\n    currentTheme: currentTheme,\n    onAddOrUpdateTheme: onSetActiveFormOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","FontAwesomeIcon","styled","useTheme","useState","useRef","CompactPicker","RelativePop","useThemeOptions","ThemeListWrapper","div","props","border","ThemeListView","currentTheme","themeOptions","onAddOrUpdateTheme","colors","primary","icon","other","c","map","themeOption","ThemeOptionWrapper","ColorSquare","color","ThemeOption","displayName","value","optionKey","updateTheme","optionRef","getOptionRef","pickerOpen","setPickerOpen","onChangeComplete","newColor","hex","onTogglePicker","horizontal","vertical","surface","text","styles","sizes","large","ThemeFormWrapper","ThemeFormView","initialThemeOptions","formType","setThemeOptions","newVal","ManageThemes","theme","setTheme","selectedThemeForm","setSelectedThemeForm","onSelectThemeForm","formFields","startCol","endCol","startRow","endRow","activeFormOptions","onSetActiveFormOptions"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SACEC,qBADF,EAEEC,sBAFF,QAGO,wCAHP;AAIA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,sGAKLC,KAAD,IAAY,aAAYA,KAAK,CAACC,MAAO,EAL/B,CAAtB;;AAQA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAwD;AAC5E,SACE,MAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEF,YAAY,CAACF,MAAb,CAAoBK,MAApB,CAA2BC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,IAAI,EAAElB,YADR;AAEE,IAAA,KAAK,EAAEc,YAAY,CAACK,IAAb,CAAkBF,MAAlB,CAAyBG,KAAzB,CAA+BC,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMIN,YAAY,CAACO,GAAb,CAAkBC,WAAD,IAAiB,CAEjC,CAFD,CANJ,EAUE,MAAC,UAAD,eAAgBzB,sBAAsB,CAACgB,YAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWE,MAAC,UAAD,eAAgBhB,sBAAsB,CAACgB,YAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAeD,CAhBD;;AAkBA,MAAMU,kBAAkB,GAAGtB,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8EAAxB;AAOA,MAAMe,WAAW,GAAGvB,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8EACMC,KAAD,IAAWA,KAAK,CAACe,KADtB,CAAjB;;AASA,MAAMC,WAAW,GAAG,CAAC;AACnBb,EAAAA,YADmB;AAEnBc,EAAAA,WAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,SAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMd;AACJ,QAAMC,SAAS,GAAG3B,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAM4B,YAAY,GAAG,MAAM;AACzB,WAAOD,SAAP;AACD,GAFD;;AAIA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8B/B,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMgC,gBAAgB,GAAIC,QAAD,IAAc;AACrCN,IAAAA,WAAW,CAACD,SAAD,EAAYO,QAAQ,CAACC,GAArB,CAAX;AACAH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMI,cAAc,GAAG,MAAMJ,aAAa,CAAC,CAACD,UAAF,CAA1C;;AAEA,SACE,MAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEF,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEH,KAApB;AAA2B,IAAA,OAAO,EAAEU,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,UAAU,IACT,MAAC,WAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,QAAQ,EAAE;AACRM,MAAAA,UAAU,EAAE,GADJ;AAERC,MAAAA,QAAQ,EAAE;AAFF,KAHZ;AAOE,IAAA,MAAM,EAAC,YAPT;AAQE,IAAA,aAAa,EAAE,CARjB;AASE,IAAA,eAAe,EAAE3B,YAAY,CAAC4B,OAAb,CAAqBzB,MAArB,CAA4BC,OAT/C;AAUE,IAAA,WAAW,EAAC,OAVd;AAWE,IAAA,WAAW,EAAEqB,cAXf;AAYE,IAAA,YAAY,EAAEN,YAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,KAAtB;AAA6B,IAAA,gBAAgB,EAAEO,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAHJ,EAoBE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEtB,YAAY,CAAC6B,IAAb,CAAkB1B,MAAlB,CAAyBC,OADlC;AAEE,IAAA,KAAK,EAAEJ,YAAY,CAAC6B,IAAb,CAAkBC,MAAlB,CAAyB1B,OAFlC;AAGE,IAAA,IAAI,EAAEJ,YAAY,CAAC6B,IAAb,CAAkBE,KAAlB,CAAwBC,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGlB,WALH,CApBF,CADF;AA8BD,CAnDD;;AAqDA,MAAMmB,gBAAgB,GAAG7C,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8EAAtB;;AAOA,MAAMsC,aAAa,GAAG,CAAC;AAAElC,EAAAA,YAAF;AAAgBmC,EAAAA,mBAAhB;AAAqCC,EAAAA;AAArC,CAAD,KAAqD;AACzE,QAAM;AAAA,OAACnC,YAAD;AAAA,OAAeoC;AAAf,MAAkC/C,QAAQ,CAAC6C,mBAAD,CAAhD;;AAEA,QAAMlB,WAAW,GAAG,CAACD,SAAD,EAAYsB,MAAZ,KAAuB;AACzCD,IAAAA,eAAe,iCACVpC,YADU;AAEb,OAACe,SAAD,mCAAkBf,YAAY,CAACe,SAAD,CAA9B;AAA2CD,QAAAA,KAAK,EAAEuB;AAAlD;AAFa,OAAf;AAID,GALD;;AAOA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,YAAY,EAAEtC,YADhB;AAEE,IAAA,WAAW,EAAEC,YAAY,CAACW,KAAb,CAAmBE,WAFlC;AAGE,IAAA,KAAK,EAAEb,YAAY,CAACW,KAAb,CAAmBG,KAH5B;AAIE,IAAA,SAAS,EAAE,OAJb;AAKE,IAAA,WAAW,EAAEE,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CArBD;;AAuBA,OAAO,MAAMsB,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAExC,YAAT;AAAuByC,EAAAA;AAAvB,CAAD,KAAuC;AACjE,QAAM;AAAA,OAACC,iBAAD;AAAA,OAAoBC;AAApB,MAA4CrD,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAmBP,eAAe,EAAxC;;AAEA,QAAMkD,iBAAiB,GAAIC,UAAD,IAAgB;AACxCF,IAAAA,oBAAoB,CAACE,UAAD,CAApB;AACD,GAFD;;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,eAAgB9D,qBAAqB,CAACyD,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,EAAf;AAAmB,IAAA,OAAO,EAAE,CAA5B;AAA+B,IAAA,OAAO,EAAC,MAAvC;AAA8C,IAAA,OAAO,EAAC,MAAtD;AAA6D,IAAA,GAAG,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,QAAQ,EAAE;AACRM,MAAAA,QAAQ,EAAE,CADF;AAERC,MAAAA,MAAM,EAAE,EAFA;AAGRC,MAAAA,QAAQ,EAAE,CAHF;AAIRC,MAAAA,MAAM,EAAE;AAJA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,iBAAiB,GAChB,MAAC,aAAD;AACE,IAAA,YAAY,EAAEV,KADhB;AAEE,IAAA,aAAa,EAAE;AACb5B,MAAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,KAAT;AAAgBD,QAAAA,WAAW,EAAE;AAA7B;AADM,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAQhB,MAAC,aAAD;AACE,IAAA,YAAY,EAAEb,YADhB;AAEE,IAAA,YAAY,EAAED,YAFhB;AAGE,IAAA,kBAAkB,EAAEmD,sBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF,CAFF,CADF;AA8BD,CAtCM","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeListView = ({ currentTheme, themeOptions, onAddOrUpdateTheme }) => {\n  return (\n    <ThemeListWrapper border={currentTheme.border.colors.primary}>\n      <FontAwesomeIcon\n        icon={faPlusCircle}\n        color={currentTheme.icon.colors.other.c}\n      />\n      {\n        themeOptions.map((themeOption) => {\n          \n        })\n      }\n      <SimpleText {...GridElementHeaderProps(currentTheme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(currentTheme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeOption = ({\n  currentTheme,\n  displayName,\n  value,\n  optionKey,\n  updateTheme,\n}) => {\n  const optionRef = useRef(null);\n  const getOptionRef = () => {\n    return optionRef;\n  };\n\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onChangeComplete = (newColor) => {\n    updateTheme(optionKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeOptionWrapper ref={optionRef}>\n      <ColorSquare color={value} onClick={onTogglePicker} />\n      {pickerOpen && (\n        <RelativePop\n          height=\"89px\"\n          width=\"245px\"\n          position={{\n            horizontal: 7.5,\n            vertical: 0,\n          }}\n          margin=\"20px 0 0 0\"\n          arrowPosition={3}\n          backgroundColor={currentTheme.surface.colors.primary}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n          getParentRef={getOptionRef}\n        >\n          <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n        </RelativePop>\n      )}\n      <SimpleText\n        color={currentTheme.text.colors.primary}\n        style={currentTheme.text.styles.primary}\n        size={currentTheme.text.sizes.large}\n      >\n        {displayName}\n      </SimpleText>\n    </ThemeOptionWrapper>\n  );\n};\n\nconst ThemeFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst ThemeFormView = ({ currentTheme, initialThemeOptions, formType }) => {\n  const [themeOptions, setThemeOptions] = useState(initialThemeOptions);\n\n  const updateTheme = (optionKey, newVal) => {\n    setThemeOptions({\n      ...themeOptions,\n      [optionKey]: { ...themeOptions[optionKey], value: newVal },\n    });\n  };\n\n  return (\n    <ThemeFormWrapper>\n      <ThemeOption\n        currentTheme={currentTheme}\n        displayName={themeOptions.color.displayName}\n        value={themeOptions.color.value}\n        optionKey={\"color\"}\n        updateTheme={updateTheme}\n      ></ThemeOption>\n    </ThemeFormWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme: currentTheme, setTheme }) => {\n  const [selectedThemeForm, setSelectedThemeForm] = useState(null);\n  const { themeOptions } = useThemeOptions();\n\n  const onSelectThemeForm = (formFields) => {\n    setSelectedThemeForm(formFields);\n  };\n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          {activeFormOptions ? (\n            <ThemeFormView\n              currentTheme={theme}\n              initialValues={{\n                color: { value: \"red\", displayName: \"Color\" },\n              }}\n            />\n          ) : (\n            <ThemeListView\n              themeOptions={themeOptions}\n              currentTheme={currentTheme}\n              onAddOrUpdateTheme={onSetActiveFormOptions}\n            />\n          )}\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}