{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/manage_themes.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { TabSectionHeaderProps } from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { useState } from \"react\";\nimport { useThemeOptions } from \"../../../hooks/useThemeOptions\";\nimport { ThemeForm } from \"./theme_form\";\nimport buildTheme from \"../../../themes/buildTheme\";\nimport { ThemeListView } from \"./theme_list\";\nexport var ManageThemes = function ManageThemes(_ref) {\n  _s();\n\n  var currentTheme = _ref.theme,\n      setTheme = _ref.setTheme;\n\n  var _useState = useState(null),\n      selectedThemeFormValues = _useState[0],\n      setSelectedThemeFormValues = _useState[1]; // const { themeOptions, onUpdateTheme, onCreateTheme, onDeleteTheme } = useThemeOptions();\n\n\n  var _useState2 = useState(),\n      themeOptions = _useState2[0],\n      setThemeOptions = _useState2[1];\n\n  useEffect(function () {\n    var callGetThemes = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getThemes();\n\n              case 2:\n                options = _context.sent;\n                setThemeOptions(options);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function callGetThemes() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    callGetThemes();\n  }, []);\n\n  var onUpdateTheme = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(theme) {\n      var updatedTheme, updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return updateTheme(theme);\n\n            case 2:\n              updatedTheme = _context2.sent;\n              updatedThemeOptions = themeOptions.map(function (theme) {\n                return theme.id !== updatedTheme.id ? theme : updatedTheme;\n              });\n              setThemeOptions(updatedThemeOptions);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onUpdateTheme(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onCreateTheme = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(theme) {\n      var newTheme, updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return createTheme(theme);\n\n            case 2:\n              newTheme = _context3.sent;\n              updatedThemeOptions = themeOptions.concat([newTheme]);\n              setThemeOptions(updatedThemeOptions);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onCreateTheme(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onDeleteTheme = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(themeId) {\n      var updatedThemeOptions;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return deleteTheme(themeId);\n\n            case 2:\n              updatedThemeOptions = themeOptions.filter(function (theme) {\n                return theme.id !== themeId;\n              });\n              setThemeOptions(updatedThemeOptions);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onDeleteTheme(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var selectThemeForm = function selectThemeForm(formFields) {\n    setSelectedThemeFormValues(formFields);\n  };\n\n  var saveTheme = function saveTheme(theme) {\n    if (theme.id) {\n      onUpdateTheme(theme);\n    } else {\n      onCreateTheme(theme);\n    }\n  };\n\n  var applyTheme = function applyTheme(theme) {\n    var builtTheme = buildTheme(theme);\n    setTheme(builtTheme);\n  };\n\n  var closeForm = function closeForm() {\n    setSelectedThemeFormValues(null);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), selectedThemeFormValues ? __jsx(ThemeForm, {\n    currentTheme: currentTheme,\n    initialValues: selectedThemeFormValues,\n    onSave: saveTheme,\n    onApply: applyTheme,\n    onDone: closeForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }) : __jsx(ThemeListView, {\n    themeOptions: themeOptions,\n    currentTheme: currentTheme,\n    onSelectTheme: applyTheme,\n    onAddOrUpdateTheme: selectThemeForm,\n    onDeleteTheme: onDeleteTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(ManageThemes, \"e5Np/Fu4AF/MX1l4YaJFfHZC2hg=\");\n\n_c = ManageThemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageThemes\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/manage_themes.jsx"],"names":["TabSectionHeaderProps","SimpleText","useState","useThemeOptions","ThemeForm","buildTheme","ThemeListView","ManageThemes","currentTheme","theme","setTheme","selectedThemeFormValues","setSelectedThemeFormValues","themeOptions","setThemeOptions","useEffect","callGetThemes","getThemes","options","onUpdateTheme","updateTheme","updatedTheme","updatedThemeOptions","map","id","onCreateTheme","createTheme","newTheme","concat","onDeleteTheme","themeId","deleteTheme","filter","selectThemeForm","formFields","saveTheme","applyTheme","builtTheme","closeForm"],"mappings":"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","sourcesContent":["import {\n  TabSectionHeaderProps\n} from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { useState } from \"react\";\nimport { useThemeOptions } from \"../../../hooks/useThemeOptions\";\nimport { ThemeForm } from \"./theme_form\";\nimport buildTheme from \"../../../themes/buildTheme\";\nimport { ThemeListView } from \"./theme_list\";\n\nexport const ManageThemes = ({ theme: currentTheme, setTheme }) => {\n  const [selectedThemeFormValues, setSelectedThemeFormValues] = useState(null);\n  // const { themeOptions, onUpdateTheme, onCreateTheme, onDeleteTheme } = useThemeOptions();\n\n  const [themeOptions, setThemeOptions] = useState();\n\n  useEffect(() => {\n      const callGetThemes = async () => {\n          const options = await getThemes();  \n          setThemeOptions(options);  \n      }\n\n      callGetThemes();\n  }, []);\n\n  const onUpdateTheme = async (theme) => {\n      const updatedTheme = await updateTheme(theme);\n      const updatedThemeOptions = themeOptions.map(theme => theme.id !== updatedTheme.id ? theme : updatedTheme);\n      setThemeOptions(updatedThemeOptions);\n  }\n\n  const onCreateTheme = async (theme) => {\n      const newTheme = await createTheme(theme);\n      const updatedThemeOptions = themeOptions.concat([newTheme]);\n      setThemeOptions(updatedThemeOptions);\n  }\n\n  const onDeleteTheme = async (themeId) => {\n      await deleteTheme(themeId);\n      const updatedThemeOptions = themeOptions.filter(theme => theme.id !== themeId);\n      setThemeOptions(updatedThemeOptions);\n  }\n\n  const selectThemeForm = (formFields) => {\n    setSelectedThemeFormValues(formFields);\n  };\n\n  const saveTheme = (theme) => {\n    if (theme.id) {\n      onUpdateTheme(theme);\n    } else {\n      onCreateTheme(theme);\n    }\n  };\n\n  const applyTheme = (theme) => {\n    const builtTheme = buildTheme(theme);\n    setTheme(builtTheme);\n  };\n\n  const closeForm = () => {\n    setSelectedThemeFormValues(null);\n  };\n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(currentTheme)}>\n        Manage Themes\n      </SimpleText>\n      {selectedThemeFormValues ? (\n        <ThemeForm\n          currentTheme={currentTheme}\n          initialValues={selectedThemeFormValues}\n          onSave={saveTheme}\n          onApply={applyTheme}\n          onDone={closeForm}\n        />\n      ) : (\n        <ThemeListView\n          themeOptions={themeOptions}\n          currentTheme={currentTheme}\n          onSelectTheme={applyTheme}\n          onAddOrUpdateTheme={selectThemeForm}\n          onDeleteTheme={onDeleteTheme}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}