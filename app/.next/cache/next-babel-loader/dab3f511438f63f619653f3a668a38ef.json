{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\nimport { DefaultTheme } from \"../../themes/DefaultTheme\";\nconst ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\n\nconst ThemeOption = (theme, onSelectTheme, onEditTheme) => {\n  __jsx(ThemeOptionWrapper, {\n    onClick: onSelectTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), \"Default\"), __jsx(FontAwesomeIcon, {\n    onClick: onEditTheme,\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-1\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], props => `1px solid ${props.border}`);\n\nconst ThemeListView = ({\n  currentTheme,\n  themeOptions,\n  onAddOrUpdateTheme\n}) => {\n  const editTheme = theme => {\n    return () => {\n      onAddOrUpdateTheme(theme);\n    };\n  };\n\n  return __jsx(ThemeListWrapper, {\n    border: currentTheme.border.colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: currentTheme.icon.colors.other.c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), themeOptions.map(themeOption => {\n    return __jsx(ThemeOption, {\n      theme: themeOption,\n      onEditTheme: editTheme(themeOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    });\n  }), __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\nconst ThemeFieldWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFieldWrapper\",\n  componentId: \"npadpy-2\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:10px;\"]);\nconst ColorSquare = styled.div.withConfig({\n  displayName: \"manage_themes__ColorSquare\",\n  componentId: \"npadpy-3\"\n})([\"background-color:\", \";height:15px;width:15px;&:hover{cursor:pointer;}\"], props => props.color);\n\nconst ThemeField = ({\n  currentTheme,\n  displayName,\n  value,\n  fieldKey,\n  updateTheme\n}) => {\n  const fieldRef = useRef(null);\n\n  const getFieldRef = () => {\n    return fieldRef;\n  };\n\n  const {\n    0: pickerOpen,\n    1: setPickerOpen\n  } = useState(false);\n\n  const onChangeComplete = newColor => {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return __jsx(ThemeFieldWrapper, {\n    ref: optionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(ColorSquare, {\n    color: value,\n    onClick: onTogglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), pickerOpen && __jsx(RelativePop, {\n    height: \"89px\",\n    width: \"245px\",\n    position: {\n      horizontal: 7.5,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getFieldRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), __jsx(SimpleText, {\n    color: currentTheme.text.colors.primary,\n    style: currentTheme.text.styles.primary,\n    size: currentTheme.text.sizes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, displayName));\n};\n\nconst ThemeFormWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFormWrapper\",\n  componentId: \"npadpy-4\"\n})([\"display:flex;flex-direction:column;justify-content:center;margin:20px;\"]);\n\nconst ThemeFormView = ({\n  currentTheme,\n  initialValues,\n  formType\n}) => {\n  const {\n    0: themeValues,\n    1: setThemeValues\n  } = useState(initialValues);\n\n  const updateTheme = (fieldKey, newVal) => {\n    setThemeValues(_objectSpread(_objectSpread({}, themeValues), {}, {\n      [fieldKey]: _objectSpread(_objectSpread({}, themeValues[optionKey]), {}, {\n        value: newVal\n      })\n    }));\n  };\n\n  return __jsx(ThemeFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeField, {\n    currentTheme: currentTheme,\n    displayName: themeValues.color.displayName,\n    value: themeValues.color.value,\n    fieldKey: \"color\",\n    updateTheme: updateTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const ManageThemes = ({\n  theme: currentTheme,\n  setTheme\n}) => {\n  const {\n    0: selectedThemeForm,\n    1: setSelectedThemeForm\n  } = useState(null);\n  const {\n    themeOptions\n  } = useThemeOptions();\n\n  const onSelectThemeForm = formFields => {\n    setSelectedThemeForm(formFields || DefaultTheme);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, selectedThemeForm ? __jsx(ThemeFormView, {\n    currentTheme: theme,\n    initialValues: {\n      color: {\n        value: \"red\",\n        displayName: \"Color\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }) : __jsx(ThemeListView, {\n    themeOptions: themeOptions,\n    currentTheme: currentTheme,\n    onAddOrUpdateTheme: onSelectThemeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","faEdit","FontAwesomeIcon","styled","useTheme","useState","useRef","CompactPicker","RelativePop","useThemeOptions","DefaultTheme","ThemeOptionWrapper","div","ThemeOption","theme","onSelectTheme","onEditTheme","currentTheme","ThemeListWrapper","props","border","ThemeListView","themeOptions","onAddOrUpdateTheme","editTheme","colors","primary","icon","other","c","map","themeOption","ThemeFieldWrapper","ColorSquare","color","ThemeField","displayName","value","fieldKey","updateTheme","fieldRef","getFieldRef","pickerOpen","setPickerOpen","onChangeComplete","newColor","hex","onTogglePicker","optionRef","horizontal","vertical","surface","text","styles","sizes","large","ThemeFormWrapper","ThemeFormView","initialValues","formType","themeValues","setThemeValues","newVal","optionKey","ManageThemes","setTheme","selectedThemeForm","setSelectedThemeForm","onSelectThemeForm","formFields","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useState, useRef } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nimport { useThemeOptions } from \"../../hooks/useThemeOptions\";\nimport { DefaultTheme } from \"../../themes/DefaultTheme\";\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ThemeOption = (theme, onSelectTheme, onEditTheme) => {\n\n\n  <ThemeOptionWrapper onClick={onSelectTheme}>\n    <SimpleText {...GridElementHeaderProps(currentTheme)}>Default</SimpleText>\n    <FontAwesomeIcon onClick={onEditTheme} icon={faEdit}/>\n  </ThemeOptionWrapper>\n  \n}\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeListView = ({ currentTheme, themeOptions, onAddOrUpdateTheme }) => {\n  const editTheme = (theme) => {\n    return () => {\n      onAddOrUpdateTheme(theme);\n    }\n  }\n\n  return (\n    <ThemeListWrapper border={currentTheme.border.colors.primary}>\n      <FontAwesomeIcon\n        icon={faPlusCircle}\n        color={currentTheme.icon.colors.other.c}\n      \n      />\n      {\n        themeOptions.map((themeOption) => {\n          return <ThemeOption theme={themeOption} onEditTheme={editTheme(themeOption)} />\n        })\n      }\n      <SimpleText {...GridElementHeaderProps(currentTheme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(currentTheme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst ThemeFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeField = ({\n  currentTheme,\n  displayName,\n  value,\n  fieldKey,\n  updateTheme,\n}) => {\n  const fieldRef = useRef(null);\n  const getFieldRef = () => {\n    return fieldRef;\n  };\n\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onChangeComplete = (newColor) => {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeFieldWrapper ref={optionRef}>\n      <ColorSquare color={value} onClick={onTogglePicker} />\n      {pickerOpen && (\n        <RelativePop\n          height=\"89px\"\n          width=\"245px\"\n          position={{\n            horizontal: 7.5,\n            vertical: 0,\n          }}\n          margin=\"20px 0 0 0\"\n          arrowPosition={3}\n          backgroundColor={currentTheme.surface.colors.primary}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n          getParentRef={getFieldRef}\n        >\n          <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n        </RelativePop>\n      )}\n      <SimpleText\n        color={currentTheme.text.colors.primary}\n        style={currentTheme.text.styles.primary}\n        size={currentTheme.text.sizes.large}\n      >\n        {displayName}\n      </SimpleText>\n    </ThemeFieldWrapper>\n  );\n};\n\nconst ThemeFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst ThemeFormView = ({ currentTheme, initialValues, formType }) => {\n  const [themeValues, setThemeValues] = useState(initialValues);\n\n  const updateTheme = (fieldKey, newVal) => {\n    setThemeValues({\n      ...themeValues,\n      [fieldKey]: { ...themeValues[optionKey], value: newVal },\n    });\n  };\n\n  return (\n    <ThemeFormWrapper>\n      <ThemeField\n        currentTheme={currentTheme}\n        displayName={themeValues.color.displayName}\n        value={themeValues.color.value}\n        fieldKey={\"color\"}\n        updateTheme={updateTheme}\n      ></ThemeField>\n    </ThemeFormWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme: currentTheme, setTheme }) => {\n  const [selectedThemeForm, setSelectedThemeForm] = useState(null);\n  const { themeOptions } = useThemeOptions();\n\n  const onSelectThemeForm = (formFields) => {\n    setSelectedThemeForm(formFields || DefaultTheme);\n  };\n\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          {selectedThemeForm ? (\n            <ThemeFormView\n              currentTheme={theme}\n              initialValues={{\n                color: { value: \"red\", displayName: \"Color\" },\n              }}\n            />\n          ) : (\n            <ThemeListView\n              themeOptions={themeOptions}\n              currentTheme={currentTheme}\n              onAddOrUpdateTheme={onSelectThemeForm}\n            />\n          )}\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}