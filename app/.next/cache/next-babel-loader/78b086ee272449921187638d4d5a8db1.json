{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getThemes, updateTheme, createTheme, deleteTheme } from \"../api/theme_api\";\nimport { useEffect, useState } from \"react\";\nimport defaultThemeValues from \"../themes/defaultThemeValues\";\n\nconst defaultTheme = _objectSpread(_objectSpread({}, defaultThemeValues), {}, {\n  name: \"Default\"\n});\n\nexport const useThemeOptions = () => {\n  const {\n    0: themeOptions,\n    1: setThemeOptions\n  } = useState([defaultTheme]);\n  useEffect(() => {\n    const callGetThemes = async () => {\n      const {\n        response,\n        error\n      } = await getThemes();\n\n      if (!error) {\n        setThemeOptions([defaultTheme].concat(response));\n      }\n    };\n\n    callGetThemes();\n  }, []);\n\n  const onUpdateTheme = async theme => {\n    const updatedTheme = await updateTheme(theme);\n    const updatedThemeOptions = themeOptions.map(theme => theme.id !== updatedTheme.id ? theme : updatedTheme);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onCreateTheme = async theme => {\n    const newTheme = await createTheme(theme);\n    const updatedThemeOptions = themeOptions.concat([newTheme]);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onDeleteTheme = async themeId => {\n    await deleteTheme(themeId);\n    const updatedThemeOptions = themeOptions.filter(theme => theme.id !== themeId);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  return {\n    themeOptions,\n    onUpdateTheme,\n    onCreateTheme,\n    onDeleteTheme\n  };\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/hooks/useThemeOptions.jsx"],"names":["getThemes","updateTheme","createTheme","deleteTheme","useEffect","useState","defaultThemeValues","defaultTheme","name","useThemeOptions","themeOptions","setThemeOptions","callGetThemes","response","error","concat","onUpdateTheme","theme","updatedTheme","updatedThemeOptions","map","id","onCreateTheme","newTheme","onDeleteTheme","themeId","filter"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;;AAEA,MAAMC,YAAY,mCAAQD,kBAAR;AAA4BE,EAAAA,IAAI,EAAE;AAAlC,EAAlB;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,CAACE,YAAD,CAAD,CAAhD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,aAAa,GAAG,YAAY;AAChC,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsB,MAAMd,SAAS,EAA3C;;AACA,UAAI,CAACc,KAAL,EAAY;AACVH,QAAAA,eAAe,CAAC,CAACJ,YAAD,EAAeQ,MAAf,CAAsBF,QAAtB,CAAD,CAAf;AACD;AACF,KALD;;AAOAD,IAAAA,aAAa;AACd,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAMC,YAAY,GAAG,MAAMjB,WAAW,CAACgB,KAAD,CAAtC;AACA,UAAME,mBAAmB,GAAGT,YAAY,CAACU,GAAb,CAAkBH,KAAD,IAC3CA,KAAK,CAACI,EAAN,KAAaH,YAAY,CAACG,EAA1B,GAA+BJ,KAA/B,GAAuCC,YADb,CAA5B;AAGAP,IAAAA,eAAe,CAACQ,mBAAD,CAAf;AACD,GAND;;AAQA,QAAMG,aAAa,GAAG,MAAOL,KAAP,IAAiB;AACrC,UAAMM,QAAQ,GAAG,MAAMrB,WAAW,CAACe,KAAD,CAAlC;AACA,UAAME,mBAAmB,GAAGT,YAAY,CAACK,MAAb,CAAoB,CAACQ,QAAD,CAApB,CAA5B;AACAZ,IAAAA,eAAe,CAACQ,mBAAD,CAAf;AACD,GAJD;;AAMA,QAAMK,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACvC,UAAMtB,WAAW,CAACsB,OAAD,CAAjB;AACA,UAAMN,mBAAmB,GAAGT,YAAY,CAACgB,MAAb,CACzBT,KAAD,IAAWA,KAAK,CAACI,EAAN,KAAaI,OADE,CAA5B;AAGAd,IAAAA,eAAe,CAACQ,mBAAD,CAAf;AACD,GAND;;AAQA,SAAO;AAACT,IAAAA,YAAD;AAAeM,IAAAA,aAAf;AAA8BM,IAAAA,aAA9B;AAA6CE,IAAAA;AAA7C,GAAP;AACD,CArCM","sourcesContent":["import {\n  getThemes,\n  updateTheme,\n  createTheme,\n  deleteTheme,\n} from \"../api/theme_api\";\nimport { useEffect, useState } from \"react\";\nimport defaultThemeValues from \"../themes/defaultThemeValues\";\n\nconst defaultTheme = { ...defaultThemeValues, name: \"Default\" };\n\nexport const useThemeOptions = () => {\n  const [themeOptions, setThemeOptions] = useState([defaultTheme]);\n\n  useEffect(() => {\n    const callGetThemes = async () => {\n      const { response, error } = await getThemes();\n      if (!error) {\n        setThemeOptions([defaultTheme].concat(response));\n      }\n    };\n\n    callGetThemes();\n  }, []);\n\n  const onUpdateTheme = async (theme) => {\n    const updatedTheme = await updateTheme(theme);\n    const updatedThemeOptions = themeOptions.map((theme) =>\n      theme.id !== updatedTheme.id ? theme : updatedTheme\n    );\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onCreateTheme = async (theme) => {\n    const newTheme = await createTheme(theme);\n    const updatedThemeOptions = themeOptions.concat([newTheme]);\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  const onDeleteTheme = async (themeId) => {\n    await deleteTheme(themeId);\n    const updatedThemeOptions = themeOptions.filter(\n      (theme) => theme.id !== themeId\n    );\n    setThemeOptions(updatedThemeOptions);\n  };\n\n  return {themeOptions, onUpdateTheme, onCreateTheme, onDeleteTheme };\n};\n"]},"metadata":{},"sourceType":"module"}