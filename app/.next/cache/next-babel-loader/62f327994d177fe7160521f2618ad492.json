{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res, methodVerb, resourceName) {\n    var resVal;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return res.json();\n\n          case 2:\n            resVal = _context.sent;\n\n            if (!(res.status !== 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            if (resVal.message) console.log(\"Error \".concat(methodVerb, \" \").concat(resourceName, \": \").concat(resVal.message));\n            return _context.abrupt(\"return\", {\n              error: true,\n              response: undefined\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              error: false,\n              response: resVal\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/steven/Documents/demo/gimme-the-loot/src/utils/apiUtil/handleResponse.js"],"names":["res","methodVerb","resourceName","json","resVal","status","message","console","log","error","response","undefined"],"mappings":";;AAAA;AAAA,sEAAe,iBAAOA,GAAP,EAAYC,UAAZ,EAAwBC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUF,GAAG,CAACG,IAAJ,EADV;;AAAA;AACLC,YAAAA,MADK;;AAAA,kBAGPJ,GAAG,CAACK,MAAJ,KAAe,GAHR;AAAA;AAAA;AAAA;;AAIP,gBAAID,MAAM,CAACE,OAAX,EAAoBC,OAAO,CAACC,GAAR,iBAAqBP,UAArB,cAAmCC,YAAnC,eAAoDE,MAAM,CAACE,OAA3D;AAJb,6CAKA;AAAEG,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,QAAQ,EAAEC;AAAzB,aALA;;AAAA;AAAA,6CAQJ;AAAEF,cAAAA,KAAK,EAAE,KAAT;AAAgBC,cAAAA,QAAQ,EAAEN;AAA1B,aARI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async (res, methodVerb, resourceName) => {\n    const resVal = await res.json();\n\n    if (res.status !== 200) {\n        if (resVal.message) console.log(`Error ${methodVerb} ${resourceName}: ${resVal.message}`);\n        return { error: true, response: undefined };\n    }\n\n    return { error: false, response: resVal };\n}"]},"metadata":{},"sourceType":"module"}