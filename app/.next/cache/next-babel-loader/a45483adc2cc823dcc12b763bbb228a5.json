{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { getStatsById } from \"../api/stats_api\";\nimport { useEffect, useState } from \"react\";\nexport var useStats = function useStats() {\n  _s();\n\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    var callGetStatsById = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getStatsById, error, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getStatsById(1);\n\n              case 2:\n                _yield$getStatsById = _context.sent;\n                error = _yield$getStatsById.error;\n                response = _yield$getStatsById.response;\n\n                if (error) {\n                  setError(true);\n                } else {\n                  setStats(options);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function callGetStatsById() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    callGetStatsById();\n  }, []);\n  return {\n    stats: stats\n  };\n};\n\n_s(useStats, \"2MjeJPBs4qcorNVauzGqvCu+DXI=\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/hooks/useStats.jsx"],"names":["getStatsById","useEffect","useState","useStats","stats","setStats","error","setError","callGetStatsById","response","options"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACAD,QAAQ,EADR;AAAA,MACnBE,KADmB;AAAA,MACZC,QADY;;AAAA,mBAEAH,QAAQ,CAAC,KAAD,CAFR;AAAA,MAEnBI,KAFmB;AAAA,MAEZC,QAFY;;AAI1BN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMO,gBAAgB;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACaR,YAAY,CAAC,CAAD,CADzB;;AAAA;AAAA;AACbM,gBAAAA,KADa,uBACbA,KADa;AACNG,gBAAAA,QADM,uBACNA,QADM;;AAErB,oBAAIH,KAAJ,EAAW;AACPC,kBAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,iBAFD,MAEO;AACHF,kBAAAA,QAAQ,CAACK,OAAD,CAAR;AACH;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAhBF,gBAAgB;AAAA;AAAA;AAAA,OAAtB;;AAUAA,IAAAA,gBAAgB;AACnB,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AAAEJ,IAAAA,KAAK,EAALA;AAAF,GAAP;AACH,CAnBM;;GAAMD,Q","sourcesContent":["import { getStatsById } from \"../api/stats_api\";\nimport { useEffect, useState } from \"react\";\n\n\nexport const useStats = () => {\n    const [stats, setStats] = useState();\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const callGetStatsById = async () => {\n            const { error, response } = await getStatsById(1);\n            if (error) {\n                setError(true);\n            } else {\n                setStats(options);  \n            }\n            \n        }\n\n        callGetStatsById();\n    }, []);\n\n    return { stats }\n}"]},"metadata":{},"sourceType":"module"}