{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/theme_form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Grid } from \"../../CoreUI/Grid/Grid\";\nimport { GridElement } from \"../../CoreUI/Grid/GridElement\";\nimport { GridElementHeaderProps } from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { DecoratedText } from \"../../CoreUI/Text/DecoratedText\";\nimport { CompactPicker, SketchPicker } from \"react-color\";\nimport { RelativePop } from \"../../CoreUI/Popover/RelativePop\";\nimport { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nvar ColorPickerContent = styled.div.withConfig({\n  displayName: \"theme_form__ColorPickerContent\",\n  componentId: \"bfkfnm-0\"\n})([\"display:flex;flex-direction:column;padding:8px;text-align:center;&:hover:{cursor:pointer;}\"]);\n_c = ColorPickerContent;\n\nvar ColorPicker = function ColorPicker(_ref) {\n  _s();\n\n  var value = _ref.value,\n      onConfirm = _ref.onConfirm;\n\n  var _useState = useState(value),\n      color = _useState[0],\n      setColor = _useState[1];\n\n  var handleChange = function handleChange(newColor) {\n    return setColor(newColor.hex);\n  };\n\n  var handleConfirm = function handleConfirm() {\n    return onConfirm(color);\n  };\n\n  return __jsx(ColorPickerContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(SketchPicker, {\n    color: color,\n    onChangeComplete: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    onClick: handleConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Confirm\"));\n};\n\n_s(ColorPicker, \"5o5wpjcwen+9FLSa/sCn7Y7hMww=\");\n\n_c2 = ColorPicker;\nvar ThemeFieldWrapper = styled.div.withConfig({\n  displayName: \"theme_form__ThemeFieldWrapper\",\n  componentId: \"bfkfnm-1\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:10px;\"]);\n_c3 = ThemeFieldWrapper;\nvar ColorSquare = styled.div.withConfig({\n  displayName: \"theme_form__ColorSquare\",\n  componentId: \"bfkfnm-2\"\n})([\"background-color:\", \";height:15px;width:15px;&:hover{cursor:pointer;}\"], function (props) {\n  return props.color;\n});\n_c4 = ColorSquare;\n\nvar ThemeField = function ThemeField(_ref2) {\n  _s2();\n\n  var textConfig = _ref2.textConfig,\n      popColor = _ref2.popColor,\n      displayName = _ref2.displayName,\n      value = _ref2.value,\n      fieldKey = _ref2.fieldKey,\n      updateTheme = _ref2.updateTheme;\n  var fieldRef = useRef(null);\n\n  var getFieldRef = function getFieldRef() {\n    return fieldRef;\n  };\n\n  var _useState2 = useState(false),\n      pickerOpen = _useState2[0],\n      setPickerOpen = _useState2[1];\n\n  var onConfirmColorChange = function onConfirmColorChange(newColor) {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  var onTogglePicker = function onTogglePicker() {\n    return setPickerOpen(!pickerOpen);\n  };\n\n  return __jsx(ThemeFieldWrapper, {\n    ref: fieldRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, pickerOpen && __jsx(RelativePop, {\n    height: \"332px\",\n    width: \"220px\",\n    position: {\n      horizontal: 0,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: popColor,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getFieldRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(ColorPicker, {\n    value: value,\n    onConfirm: onConfirmColorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(DecoratedText, _extends({}, textConfig, {\n    decoration: {\n      start: __jsx(ColorSquare, {\n        color: value,\n        onClick: onTogglePicker,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }\n      }),\n      startWidth: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), displayName));\n};\n\n_s2(ThemeField, \"Q8R4kpam1JOmOQBTkKXR+TrUjcU=\");\n\n_c5 = ThemeField;\nvar Button = styled.div.withConfig({\n  displayName: \"theme_form__Button\",\n  componentId: \"bfkfnm-3\"\n})([\"\", \"\"], function (props) {\n  return \"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    margin-right: 30px;\\n    border: 1px solid \".concat(props.borderColor, \";\\n    border-radius: 4px;\\n    opacity: 1;\\n    background: \").concat(props.backgroundColor, \" 0% 0% no-repeat padding-box;\\n    width: 100px;\\n    height: 50px;\\n    color: \").concat(props.color, \";\\n    font-size: 18px;\\n    font-family: \\\"Source Sans Pro\\\", sans-serif;\\n    cursor: pointer;\\n    margin: 20px 20px 20px 0;\\n    &:hover {\\n      background-color: \").concat(props.hoverBackground, \";\\n    }\");\n});\n_c6 = Button;\nvar ButtonsContainer = styled.div.withConfig({\n  displayName: \"theme_form__ButtonsContainer\",\n  componentId: \"bfkfnm-4\"\n})([\"width:100%;display:flex;\"]);\n_c7 = ButtonsContainer;\nvar Input = styled.input.withConfig({\n  displayName: \"theme_form__Input\",\n  componentId: \"bfkfnm-5\"\n})([\"margin:25px;\"]);\n_c8 = Input;\nexport var ThemeForm = function ThemeForm(_ref3) {\n  _s3();\n\n  var currentTheme = _ref3.currentTheme,\n      initialValues = _ref3.initialValues,\n      onSave = _ref3.onSave,\n      onApply = _ref3.onApply,\n      onDone = _ref3.onDone;\n\n  var _useState3 = useState(initialValues),\n      themeValues = _useState3[0],\n      setThemeValues = _useState3[1];\n\n  var updateTheme = function updateTheme(fieldKey, newVal) {\n    setThemeValues(_objectSpread(_objectSpread({}, themeValues), {}, _defineProperty({}, fieldKey, newVal)));\n  };\n\n  var updateName = function updateName(e) {\n    return updateTheme(\"name\", e.target.value);\n  };\n\n  var handleSave = function handleSave() {\n    return onSave(themeValues);\n  };\n\n  var handleApply = function handleApply() {\n    return onApply(themeValues);\n  };\n\n  var fields = Object.keys(themeValues).reduce(function (result, fieldKey) {\n    var fieldVal = themeValues[fieldKey];\n    var fieldKeyParts = fieldKey.split(\"_\");\n    var fieldGroup = fieldKeyParts[0];\n    var field = fieldKeyParts[fieldKeyParts.length - 1];\n\n    if (!result[fieldGroup]) {\n      result[fieldGroup] = {};\n    }\n\n    result[fieldGroup][field] = {\n      fieldKey: fieldKey,\n      displayName: field[0].toUpperCase() + field.slice(1),\n      value: fieldVal\n    };\n    return result;\n  }, {});\n  var _currentTheme$text = currentTheme.text,\n      primaryStyle = _currentTheme$text.styles.primary,\n      primaryColor = _currentTheme$text.colors.primary,\n      small = _currentTheme$text.sizes.small,\n      primaryBorderColor = currentTheme.border.colors.primary,\n      primarySurfaceColor = currentTheme.surface.colors.primary,\n      popColor = currentTheme.surface.colors.primary;\n  var fieldTextConfig = {\n    style: primaryStyle,\n    size: small,\n    color: primaryColor\n  };\n\n  var getFieldsByGroup = function getFieldsByGroup(group) {\n    return Object.keys(group).map(function (fieldKey) {\n      var field = group[fieldKey];\n      return __jsx(ThemeField, {\n        textConfig: fieldTextConfig,\n        popColor: popColor,\n        displayName: field.displayName,\n        value: field.value,\n        fieldKey: field.fieldKey,\n        updateTheme: updateTheme,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ButtonsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    color: primaryColor,\n    backgroundColor: primarySurfaceColor,\n    borderColor: primaryBorderColor,\n    onClick: handleApply,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"Apply\"), __jsx(Button, {\n    color: primaryColor,\n    backgroundColor: primarySurfaceColor,\n    borderColor: primaryBorderColor,\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"Save\"), __jsx(Button, {\n    color: primaryColor,\n    backgroundColor: primarySurfaceColor,\n    borderColor: primaryBorderColor,\n    onClick: onDone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \"Done\")), __jsx(Grid, {\n    numCols: 12,\n    numRows: 4,\n    rowUnit: \"135px\",\n    colUnit: \"56px\",\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 9,\n      endCol: 13,\n      startRow: 3,\n      endRow: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }), \"Background\"), getFieldsByGroup(fields.background)), __jsx(GridElement, {\n    position: {\n      startCol: 5,\n      endCol: 9,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }), \"Border\"), getFieldsByGroup(fields.border)), __jsx(GridElement, {\n    position: {\n      startCol: 9,\n      endCol: 13,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }), \"Surface\"), getFieldsByGroup(fields.surface)), __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 5,\n      startRow: 2,\n      endRow: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }), \"Text\"), getFieldsByGroup(fields.text)), __jsx(GridElement, {\n    position: {\n      startCol: 5,\n      endCol: 9,\n      startRow: 2,\n      endRow: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }), \"Icon\"), getFieldsByGroup(fields.icon)), __jsx(GridElement, {\n    position: {\n      startCol: 9,\n      endCol: 13,\n      startRow: 2,\n      endRow: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }), \"Tab\"), getFieldsByGroup(fields.tab)), __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 5,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), \"Name\"), __jsx(Input, {\n    type: \"text\",\n    onChange: updateName,\n    value: themeValues.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s3(ThemeForm, \"IeLqouBLCOUNnHrXLO/NySDzhQQ=\");\n\n_c9 = ThemeForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"ColorPickerContent\");\n$RefreshReg$(_c2, \"ColorPicker\");\n$RefreshReg$(_c3, \"ThemeFieldWrapper\");\n$RefreshReg$(_c4, \"ColorSquare\");\n$RefreshReg$(_c5, \"ThemeField\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"ButtonsContainer\");\n$RefreshReg$(_c8, \"Input\");\n$RefreshReg$(_c9, \"ThemeForm\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes/theme_form.jsx"],"names":["Grid","GridElement","GridElementHeaderProps","SimpleText","DecoratedText","CompactPicker","SketchPicker","RelativePop","useState","useRef","styled","ColorPickerContent","div","ColorPicker","value","onConfirm","color","setColor","handleChange","newColor","hex","handleConfirm","ThemeFieldWrapper","ColorSquare","props","ThemeField","textConfig","popColor","displayName","fieldKey","updateTheme","fieldRef","getFieldRef","pickerOpen","setPickerOpen","onConfirmColorChange","onTogglePicker","horizontal","vertical","start","startWidth","Button","borderColor","backgroundColor","hoverBackground","ButtonsContainer","Input","input","ThemeForm","currentTheme","initialValues","onSave","onApply","onDone","themeValues","setThemeValues","newVal","updateName","e","target","handleSave","handleApply","fields","Object","keys","reduce","result","fieldVal","fieldKeyParts","split","fieldGroup","field","length","toUpperCase","slice","text","primaryStyle","styles","primary","primaryColor","colors","small","sizes","primaryBorderColor","border","primarySurfaceColor","surface","fieldTextConfig","style","size","getFieldsByGroup","group","map","startCol","endCol","startRow","endRow","background","icon","tab","name"],"mappings":"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","sourcesContent":["import { Grid } from \"../../CoreUI/Grid/Grid\";\nimport { GridElement } from \"../../CoreUI/Grid/GridElement\";\nimport { GridElementHeaderProps } from \"../../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../../CoreUI/Text/SimpleText\";\nimport { DecoratedText } from \"../../CoreUI/Text/DecoratedText\";\nimport { CompactPicker, SketchPicker } from \"react-color\";\nimport { RelativePop } from \"../../CoreUI/Popover/RelativePop\";\nimport { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst ColorPickerContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  text-align: center;\n  &:hover: {\n    cursor: pointer;\n  }\n`;\n\nconst ColorPicker = ({ value, onConfirm }) => {\n  const [color, setColor] = useState(value);\n  const handleChange = (newColor) => setColor(newColor.hex);\n  const handleConfirm = () => onConfirm(color);\n\n  return (\n    <ColorPickerContent>\n      <SketchPicker color={color} onChangeComplete={handleChange} />\n      <div onClick={handleConfirm}>Confirm</div>\n    </ColorPickerContent>\n  );\n};\n\nconst ThemeFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeField = ({\n  textConfig,\n  popColor,\n  displayName,\n  value,\n  fieldKey,\n  updateTheme,\n}) => {\n  const fieldRef = useRef(null);\n  const getFieldRef = () => {\n    return fieldRef;\n  };\n\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onConfirmColorChange = (newColor) => {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeFieldWrapper ref={fieldRef}>\n      {pickerOpen && (\n        <RelativePop\n          height=\"332px\"\n          width=\"220px\"\n          position={{\n            horizontal: 0,\n            vertical: 0,\n          }}\n          margin=\"20px 0 0 0\"\n          arrowPosition={3}\n          backgroundColor={popColor}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n          getParentRef={getFieldRef}\n        >\n          <ColorPicker value={value} onConfirm={onConfirmColorChange} />\n        </RelativePop>\n      )}\n      <DecoratedText\n        {...textConfig}\n        decoration={{\n          start: <ColorSquare color={value} onClick={onTogglePicker} />,\n          startWidth: 20,\n        }}\n      >\n        {displayName}\n      </DecoratedText>\n    </ThemeFieldWrapper>\n  );\n};\n\nconst Button = styled.div`\n  ${(props) => {\n    return `\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 30px;\n    border: 1px solid ${props.borderColor};\n    border-radius: 4px;\n    opacity: 1;\n    background: ${props.backgroundColor} 0% 0% no-repeat padding-box;\n    width: 100px;\n    height: 50px;\n    color: ${props.color};\n    font-size: 18px;\n    font-family: \"Source Sans Pro\", sans-serif;\n    cursor: pointer;\n    margin: 20px 20px 20px 0;\n    &:hover {\n      background-color: ${props.hoverBackground};\n    }`;\n  }}\n`;\n\nconst ButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Input = styled.input`\n  margin: 25px;\n`;\n\nexport const ThemeForm = ({\n  currentTheme,\n  initialValues,\n  onSave,\n  onApply,\n  onDone,\n}) => {\n  const [themeValues, setThemeValues] = useState(initialValues);\n  const updateTheme = (fieldKey, newVal) => {\n    setThemeValues({\n      ...themeValues,\n      [fieldKey]: newVal,\n    });\n  };\n  const updateName = (e) => updateTheme(\"name\", e.target.value);\n\n  const handleSave = () => onSave(themeValues);\n  const handleApply = () => onApply(themeValues);\n\n  const fields = Object.keys(themeValues).reduce((result, fieldKey) => {\n    const fieldVal = themeValues[fieldKey];\n\n    const fieldKeyParts = fieldKey.split(\"_\");\n    const fieldGroup = fieldKeyParts[0];\n    const field = fieldKeyParts[fieldKeyParts.length - 1];\n\n    if (!result[fieldGroup]) {\n      result[fieldGroup] = {};\n    }\n\n    result[fieldGroup][field] = {\n      fieldKey,\n      displayName: field[0].toUpperCase() + field.slice(1),\n      value: fieldVal,\n    };\n\n    return result;\n  }, {});\n\n  const {\n    text: {\n      styles: { primary: primaryStyle },\n      colors: { primary: primaryColor },\n      sizes: { small },\n    },\n    border: {\n      colors: { primary: primaryBorderColor },\n    },\n    surface: {\n      colors: { primary: primarySurfaceColor },\n    },\n    surface: {\n      colors: { primary: popColor },\n    },\n  } = currentTheme;\n\n  const fieldTextConfig = {\n    style: primaryStyle,\n    size: small,\n    color: primaryColor,\n  };\n\n  const getFieldsByGroup = (group) => {\n    return Object.keys(group).map((fieldKey) => {\n      const field = group[fieldKey];\n      return (\n        <ThemeField\n          textConfig={fieldTextConfig}\n          popColor={popColor}\n          displayName={field.displayName}\n          value={field.value}\n          fieldKey={field.fieldKey}\n          updateTheme={updateTheme}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <ButtonsContainer>\n        <Button\n          color={primaryColor}\n          backgroundColor={primarySurfaceColor}\n          borderColor={primaryBorderColor}\n          onClick={handleApply}\n        >\n          Apply\n        </Button>\n        <Button\n          color={primaryColor}\n          backgroundColor={primarySurfaceColor}\n          borderColor={primaryBorderColor}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button\n          color={primaryColor}\n          backgroundColor={primarySurfaceColor}\n          borderColor={primaryBorderColor}\n          onClick={onDone}\n        >\n          Done\n        </Button>\n      </ButtonsContainer>\n      <Grid numCols={12} numRows={4} rowUnit=\"135px\" colUnit=\"56px\" key={1}>\n        <GridElement\n          position={{\n            startCol: 9,\n            endCol: 13,\n            startRow: 3,\n            endRow: 4,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Background\n          </SimpleText>\n          {getFieldsByGroup(fields.background)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 5,\n            endCol: 9,\n            startRow: 1,\n            endRow: 2,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Border\n          </SimpleText>\n          {getFieldsByGroup(fields.border)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 9,\n            endCol: 13,\n            startRow: 1,\n            endRow: 2,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Surface\n          </SimpleText>\n          {getFieldsByGroup(fields.surface)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 5,\n            startRow: 2,\n            endRow: 5,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Text\n          </SimpleText>\n          {getFieldsByGroup(fields.text)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 5,\n            endCol: 9,\n            startRow: 2,\n            endRow: 4,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Icon\n          </SimpleText>\n          {getFieldsByGroup(fields.icon)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 9,\n            endCol: 13,\n            startRow: 2,\n            endRow: 3,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>Tab</SimpleText>\n          {getFieldsByGroup(fields.tab)}\n        </GridElement>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 5,\n            startRow: 1,\n            endRow: 2,\n          }}\n        >\n          <SimpleText {...GridElementHeaderProps(currentTheme)}>\n            Name\n          </SimpleText>\n          <Input type=\"text\" onChange={updateName} value={themeValues.name} />\n        </GridElement>\n      </Grid>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}