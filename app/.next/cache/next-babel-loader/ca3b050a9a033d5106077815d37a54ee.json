{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/theme_form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 15px;\\n  width: 15px;\\n  &:hover {\\n    cursor: pointer;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { DecoratedText } from \"../CoreUI/Text/DecoratedText\";\nvar ThemeFieldWrapper = styled.div(_templateObject());\n_c = ThemeFieldWrapper;\nvar ColorSquare = styled.div(_templateObject2(), function (props) {\n  return props.color;\n});\n_c2 = ColorSquare;\n\nvar ThemeField = function ThemeField(_ref) {\n  _s();\n\n  var textConfig = _ref.textConfig,\n      displayName = _ref.displayName,\n      value = _ref.value,\n      fieldKey = _ref.fieldKey,\n      updateTheme = _ref.updateTheme;\n  var fieldRef = useRef(null);\n\n  var getFieldRef = function getFieldRef() {\n    return fieldRef;\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerOpen = _useState2[0],\n      setPickerOpen = _useState2[1];\n\n  var onChangeComplete = function onChangeComplete(newColor) {\n    updateTheme(fieldKey, newColor.hex);\n    setPickerOpen(false);\n  };\n\n  var onTogglePicker = function onTogglePicker() {\n    return setPickerOpen(!pickerOpen);\n  };\n\n  return __jsx(ThemeFieldWrapper, {\n    ref: fieldRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, pickerOpen && __jsx(RelativePop, {\n    height: \"89px\",\n    width: \"245px\",\n    position: {\n      horizontal: 7.5,\n      vertical: 0\n    },\n    margin: \"20px 0 0 0\",\n    arrowPosition: 3,\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    getParentRef: getFieldRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), __jsx(DecoratedText, _extends({}, textConfig, {\n    decoration: __jsx(ColorSquare, {\n      color: value,\n      onClick: onTogglePicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), displayName));\n};\n\n_s(ThemeField, \"Q8R4kpam1JOmOQBTkKXR+TrUjcU=\");\n\n_c3 = ThemeField;\nexport var ThemeForm = function ThemeForm(_ref2) {\n  _s2();\n\n  var currentTheme = _ref2.currentTheme,\n      initialValues = _ref2.initialValues;\n\n  var _useState3 = useState(initialValues),\n      _useState4 = _slicedToArray(_useState3, 2),\n      themeValues = _useState4[0],\n      setThemeValues = _useState4[1];\n\n  var updateTheme = function updateTheme(fieldKey, newVal) {\n    setThemeValues(_objectSpread(_objectSpread({}, themeValues), {}, _defineProperty({}, fieldKey, newVal)));\n  };\n\n  var _currentTheme$text = currentTheme.text,\n      primaryStyle = _currentTheme$text.styles.primary,\n      primaryColor = _currentTheme$text.colors.primary,\n      small = _currentTheme$text.sizes.small;\n  var fieldTextConfig = {\n    style: primaryStyle,\n    size: small,\n    color: primaryColor\n  };\n  var fields = Object.keys(initialValues).reduce(function (result, fieldKey) {\n    var fieldVal = initialValues[fieldKey];\n    var fieldKeyParts = fieldKey.split(\"_\");\n    var fieldGroup = fieldKeyParts[0];\n    var field = fieldKeyParts[fieldKeyParts.length - 1];\n\n    if (!result[fieldGroup]) {\n      result[fieldGroup] = {};\n    }\n\n    result[fieldGroup][field] = {\n      fieldKey: fieldKey,\n      displayName: field[0].toUpperCase() + field.slice(1),\n      value: fieldVal\n    };\n    return result;\n  }, {});\n  return __jsx(ThemeField, {\n    currentTheme: currentTheme,\n    displayName: displayName,\n    value: fieldVal,\n    fieldKey: fieldKey,\n    updateTheme: updateTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  });\n  return __jsx(Grid, {\n    numCols: 12,\n    numRows: 3,\n    rowUnit: \"135px\",\n    colUnit: \"56px\",\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 5,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), \"Background\")), __jsx(GridElement, {\n    position: {\n      startCol: 5,\n      endCol: 9,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 8\n    }\n  }), \"Border\")), __jsx(GridElement, {\n    position: {\n      startCol: 9,\n      endCol: 13,\n      startRow: 1,\n      endRow: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 8\n    }\n  }), \"Surface\")), __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 5,\n      startRow: 2,\n      endRow: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 8\n    }\n  }), \"Text\")), __jsx(GridElement, {\n    position: {\n      startCol: 5,\n      endCol: 9,\n      startRow: 2,\n      endRow: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 8\n    }\n  }), \"Icon\")), __jsx(GridElement, {\n    position: {\n      startCol: 9,\n      endCol: 13,\n      startRow: 2,\n      endRow: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 8\n    }\n  }), \"Tab\")));\n};\n\n_s2(ThemeForm, \"IeLqouBLCOUNnHrXLO/NySDzhQQ=\");\n\n_c4 = ThemeForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ThemeFieldWrapper\");\n$RefreshReg$(_c2, \"ColorSquare\");\n$RefreshReg$(_c3, \"ThemeField\");\n$RefreshReg$(_c4, \"ThemeForm\");","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/theme_form.jsx"],"names":["Grid","GridElement","GridElementHeaderProps","SimpleText","DecoratedText","ThemeFieldWrapper","styled","div","ColorSquare","props","color","ThemeField","textConfig","displayName","value","fieldKey","updateTheme","fieldRef","useRef","getFieldRef","useState","pickerOpen","setPickerOpen","onChangeComplete","newColor","hex","onTogglePicker","horizontal","vertical","currentTheme","surface","colors","primary","ThemeForm","initialValues","themeValues","setThemeValues","newVal","text","primaryStyle","styles","primaryColor","small","sizes","fieldTextConfig","style","size","fields","Object","keys","reduce","result","fieldVal","fieldKeyParts","split","fieldGroup","field","length","toUpperCase","slice","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { Grid } from \"../CoreUI/Grid/Grid\";\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { DecoratedText } from \"../CoreUI/Text/DecoratedText\";\n\nconst ThemeFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = styled.div`\n  background-color: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeField = ({\n    textConfig,\n    displayName,\n    value,\n    fieldKey,\n    updateTheme,\n  }) => {\n    const fieldRef = useRef(null);\n    const getFieldRef = () => {\n      return fieldRef;\n    };\n  \n    const [pickerOpen, setPickerOpen] = useState(false);\n  \n    const onChangeComplete = (newColor) => {\n      updateTheme(fieldKey, newColor.hex);\n      setPickerOpen(false);\n    };\n  \n    const onTogglePicker = () => setPickerOpen(!pickerOpen);\n  \n    return (\n      <ThemeFieldWrapper ref={fieldRef}>\n        {pickerOpen && (\n          <RelativePop\n            height=\"89px\"\n            width=\"245px\"\n            position={{\n              horizontal: 7.5,\n              vertical: 0,\n            }}\n            margin=\"20px 0 0 0\"\n            arrowPosition={3}\n            backgroundColor={currentTheme.surface.colors.primary}\n            borderColor=\"black\"\n            onClickAway={onTogglePicker}\n            getParentRef={getFieldRef}\n          >\n            <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n          </RelativePop>\n        )}\n        <DecoratedText\n          {...textConfig}\n          decoration={<ColorSquare color={value} onClick={onTogglePicker} />}\n        >\n          {displayName}\n        </DecoratedText>\n      </ThemeFieldWrapper>\n    );\n  };\n\n\nexport const ThemeForm = ({ currentTheme, initialValues }) => {\n    const [themeValues, setThemeValues] = useState(initialValues);\n\n    const updateTheme = (fieldKey, newVal) => {\n      setThemeValues({\n        ...themeValues,\n        [fieldKey]: newVal,\n      });\n    };\n\n    const {\n        text: {\n          styles: { primary: primaryStyle },\n          colors: {\n            primary: primaryColor,\n          },\n          sizes: { small },\n        },\n      } = currentTheme;\n\n      const fieldTextConfig = {\n        style: primaryStyle,\n        size: small,\n        color: primaryColor,\n      };\n\n  const fields = Object.keys(initialValues).reduce((result, fieldKey) => {\n    const fieldVal = initialValues[fieldKey];\n\n    const fieldKeyParts = fieldKey.split(\"_\");\n    const fieldGroup = fieldKeyParts[0];\n    const field = fieldKeyParts[fieldKeyParts.length - 1];\n\n    if (!result[fieldGroup]) {\n        result[fieldGroup] = {};\n    }\n\n    result[fieldGroup][field] = {\n        fieldKey,\n        displayName: field[0].toUpperCase() + field.slice(1),\n        value: fieldVal\n    }\n    \n    return result;\n\n  }, {});\n\n  return (\n    <ThemeField\n      currentTheme={currentTheme}\n      displayName={displayName}\n      value={fieldVal}\n      fieldKey={fieldKey}\n      updateTheme={updateTheme}\n    />\n  );\n\n  return (\n    <Grid numCols={12} numRows={3} rowUnit=\"135px\" colUnit=\"56px\" key={1}>\n      <GridElement\n        position={{\n          startCol: 1,\n          endCol: 5,\n          startRow: 1,\n          endRow: 2,\n        }}\n      >\n        <SimpleText {...GridElementHeaderProps(currentTheme)}>Background</SimpleText>\n        \n      </GridElement>\n      <GridElement\n        position={{\n          startCol: 5,\n          endCol: 9,\n          startRow: 1,\n          endRow: 2,\n        }}\n      ><SimpleText {...GridElementHeaderProps(currentTheme)}>Border</SimpleText></GridElement>\n      <GridElement\n        position={{\n          startCol: 9,\n          endCol: 13,\n          startRow: 1,\n          endRow: 2,\n        }}\n      ><SimpleText {...GridElementHeaderProps(currentTheme)}>Surface</SimpleText></GridElement>\n      <GridElement\n        position={{\n          startCol: 1,\n          endCol: 5,\n          startRow: 2,\n          endRow: 4,\n        }}\n      ><SimpleText {...GridElementHeaderProps(currentTheme)}>Text</SimpleText></GridElement>\n      <GridElement\n        position={{\n          startCol: 5,\n          endCol: 9,\n          startRow: 2,\n          endRow: 4,\n        }}\n      ><SimpleText {...GridElementHeaderProps(currentTheme)}>Icon</SimpleText></GridElement>\n      <GridElement\n        position={{\n          startCol: 9,\n          endCol: 13,\n          startRow: 2,\n          endRow: 3,\n        }}\n      ><SimpleText {...GridElementHeaderProps(currentTheme)}>Tab</SimpleText></GridElement>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}