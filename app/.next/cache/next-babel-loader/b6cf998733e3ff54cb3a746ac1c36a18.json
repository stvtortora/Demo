{"ast":null,"code":"const addField = (fieldKeyArray, value, theme) => {\n  if (fieldKeyArray.length === 1) {\n    theme[currentKey] = value;\n  } else {\n    const currentKey = fieldKeyArray[0];\n    const nextKey = fieldKeyArray[1];\n\n    if (!theme[currentKey]) {\n      theme[currentKey] = {};\n    }\n\n    theme[currentKey][nextKey] = addField(fieldKeyArray.slice(1), theme[currentKey]);\n  }\n\n  return theme;\n};\n\nexport default (themeFields => {\n  const theme = Object.keys(themeFields).reduce((result, fieldKey) => {\n    if (fieldKey !== \"id\" && fieldKey !== \"name\") {\n      result = addField(fieldKey.split(\"_\"), themeFields[fieldKey], result);\n    }\n\n    if (fieldKey === name) {\n      result.name = name;\n    }\n\n    return result;\n  }, {});\n  console.log(\"BUILT THEME\");\n  console.log(theme);\n  return theme;\n});","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/utils/buildTheme.js"],"names":["addField","fieldKeyArray","value","theme","length","currentKey","nextKey","slice","themeFields","Object","keys","reduce","result","fieldKey","split","name","console","log"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAACC,aAAD,EAAgBC,KAAhB,EAAuBC,KAAvB,KAAiC;AAC9C,MAAIF,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC5BD,IAAAA,KAAK,CAACE,UAAD,CAAL,GAAoBH,KAApB;AACH,GAFD,MAEO;AACH,UAAMG,UAAU,GAAGJ,aAAa,CAAC,CAAD,CAAhC;AACA,UAAMK,OAAO,GAAGL,aAAa,CAAC,CAAD,CAA7B;;AAEA,QAAI,CAACE,KAAK,CAACE,UAAD,CAAV,EAAwB;AACpBF,MAAAA,KAAK,CAACE,UAAD,CAAL,GAAoB,EAApB;AACH;;AAEDF,IAAAA,KAAK,CAACE,UAAD,CAAL,CAAkBC,OAAlB,IAA6BN,QAAQ,CAACC,aAAa,CAACM,KAAd,CAAoB,CAApB,CAAD,EAAyBJ,KAAK,CAACE,UAAD,CAA9B,CAArC;AACH;;AAED,SAAOF,KAAP;AACH,CAfD;;AAiBA,gBAAgBK,WAAD,IAAiB;AAC5B,QAAML,KAAK,GAAGM,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,MAAzB,CAAgC,CAACC,MAAD,EAASC,QAAT,KAAsB;AAChE,QAAIA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,MAAtC,EAA8C;AAC1CD,MAAAA,MAAM,GAAGZ,QAAQ,CAACa,QAAQ,CAACC,KAAT,CAAe,GAAf,CAAD,EAAsBN,WAAW,CAACK,QAAD,CAAjC,EAA6CD,MAA7C,CAAjB;AACH;;AAED,QAAIC,QAAQ,KAAKE,IAAjB,EAAuB;AACnBH,MAAAA,MAAM,CAACG,IAAP,GAAcA,IAAd;AACH;;AAED,WAAOH,MAAP;AACH,GAVa,EAUX,EAVW,CAAd;AAWAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,SAAOA,KAAP;AACH,CAfD","sourcesContent":["const addField = (fieldKeyArray, value, theme) => {\n    if (fieldKeyArray.length === 1) {\n        theme[currentKey] = value;\n    } else {\n        const currentKey = fieldKeyArray[0];\n        const nextKey = fieldKeyArray[1];\n    \n        if (!theme[currentKey]) {\n            theme[currentKey] = {};\n        }\n    \n        theme[currentKey][nextKey] = addField(fieldKeyArray.slice(1), theme[currentKey]);\n    }\n\n    return theme;\n}\n\nexport default (themeFields) => {\n    const theme = Object.keys(themeFields).reduce((result, fieldKey) => {\n        if (fieldKey !== \"id\" && fieldKey !== \"name\") {\n            result = addField(fieldKey.split(\"_\"), themeFields[fieldKey], result);\n        }\n\n        if (fieldKey === name) {\n            result.name = name;\n        }\n\n        return result;\n    }, {});\n    console.log(\"BUILT THEME\");\n    console.log(theme);\n    return theme;\n}"]},"metadata":{},"sourceType":"module"}