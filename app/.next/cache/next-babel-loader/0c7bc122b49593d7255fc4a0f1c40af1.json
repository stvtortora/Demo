{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport { TabSectionHeaderProps, GridElementHeaderProps } from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\nconst ThemeListWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeListWrapper\",\n  componentId: \"npadpy-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;border-top:\", \";\"], props => `1px solid ${props.border}`);\n\nconst ThemeList = ({\n  theme\n}) => {\n  return __jsx(ThemeListWrapper, {\n    border: theme.border.colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    color: theme.icon.colors.other.c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), \"Default\"), __jsx(SimpleText, _extends({}, GridElementHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), \"Theme 1\"));\n};\n\nconst ThemeOptionWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeOptionWrapper\",\n  componentId: \"npadpy-1\"\n})([\"display:flex;flex-direction:row;justify-content:center;margin-bottom:10px;\"]);\nconst ColorSquare = style.div`\n  backgroundColor: ${props => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeOption = ({\n  currentTheme,\n  displayName,\n  value,\n  optionKey,\n  updateTheme\n}) => {\n  const {\n    0: pickerOpen,\n    1: setPickerOpen\n  } = useState(false);\n\n  const onChangeComplete = newColor => {\n    updateTheme(optionKey, newColor);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return __jsx(ThemeOptionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, !pickerOpen ? __jsx(ColorSquare, {\n    color: value,\n    onClick: onTogglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : __jsx(RelativePop, {\n    height: \"200px\",\n    width: \"197px\",\n    position: {\n      horizontal: 11,\n      vertical: 95\n    },\n    backgroundColor: currentTheme.surface.colors.primary,\n    borderColor: \"black\",\n    onClickAway: onTogglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(CompactPicker, {\n    color: value,\n    onChangeComplete: onChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), __jsx(SimpleText, _extends({}, GridElementHeaderProps(currentTheme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), displayName));\n};\n\nconst ThemeFormWrapper = styled.div.withConfig({\n  displayName: \"manage_themes__ThemeFormWrapper\",\n  componentId: \"npadpy-2\"\n})([\"display:flex;flex-direction:column;justify-content:center;margin:20px;\"]);\n\nconst ThemeForm = ({\n  currentTheme,\n  initialThemeOptions,\n  formType\n}) => {\n  const {\n    0: themeOptions,\n    1: setThemeOptions\n  } = useState(initialThemeOptions);\n\n  const updateTheme = (optionKey, newVal) => {\n    setThemeOptions(_objectSpread(_objectSpread({}, themeOptions), {}, {\n      [optionKey]: newVal\n    }));\n  };\n\n  return __jsx(ThemeFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeOption, {\n    currentTheme: theme,\n    name: initialThemeOptions.color.displayName,\n    value: initialThemeOptions.color.value,\n    optionKey: \"color\",\n    updateTheme: updateTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const ManageThemes = ({\n  theme,\n  setTheme\n}) => {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleText, _extends({}, TabSectionHeaderProps(theme), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), \"Manage Themes\"), __jsx(Grid, {\n    numCols: 16,\n    numRows: 9,\n    rowUnit: \"28px\",\n    colUnit: \"28px\",\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(GridElement, {\n    position: {\n      startCol: 1,\n      endCol: 17,\n      startRow: 1,\n      endRow: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeList, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), __jsx(ThemeForm, {\n    initialThemeOptions: {\n      color: {\n        value: \"red\",\n        displayName: \"Color\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/steven/Documents/lootcrate/gimme-the-loot/src/components/Tabs/manage_themes.jsx"],"names":["GridElement","Grid","TabSectionHeaderProps","GridElementHeaderProps","SimpleText","faPlusCircle","FontAwesomeIcon","styled","useState","CompactPicker","RelativePop","ThemeListWrapper","div","props","border","ThemeList","theme","colors","primary","icon","other","c","ThemeOptionWrapper","ColorSquare","style","color","ThemeOption","currentTheme","displayName","value","optionKey","updateTheme","pickerOpen","setPickerOpen","onChangeComplete","newColor","onTogglePicker","horizontal","vertical","surface","ThemeFormWrapper","ThemeForm","initialThemeOptions","formType","themeOptions","setThemeOptions","newVal","ManageThemes","setTheme","startCol","endCol","startRow","endRow"],"mappings":"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","sourcesContent":["import { GridElement } from \"../CoreUI/Grid/GridElement\";\nimport { Grid } from \"../CoreUI/Grid/Grid\";\nimport {\n  TabSectionHeaderProps,\n  GridElementHeaderProps,\n} from \"../../utils/styleUtils/commonTextProps\";\nimport { SimpleText } from \"../CoreUI/Text/SimpleText\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { RelativePop } from \"../CoreUI/Popover/RelativePop\";\n\nconst ThemeListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: ${(props) => `1px solid ${props.border}`};\n`;\n\nconst ThemeList = ({ theme }) => {\n  return (\n    <ThemeListWrapper border={theme.border.colors.primary}>\n      <FontAwesomeIcon icon={faPlusCircle} color={theme.icon.colors.other.c} />\n      <SimpleText {...GridElementHeaderProps(theme)}>Default</SimpleText>\n      <SimpleText {...GridElementHeaderProps(theme)}>Theme 1</SimpleText>\n    </ThemeListWrapper>\n  );\n};\n\nconst ThemeOptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nconst ColorSquare = style.div`\n  backgroundColor: ${(props) => props.color};\n  height: 15px;\n  width: 15px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ThemeOption = ({\n  currentTheme,\n  displayName,\n  value,\n  optionKey,\n  updateTheme,\n}) => {\n  const [pickerOpen, setPickerOpen] = useState(false);\n\n  const onChangeComplete = (newColor) => {\n    updateTheme(optionKey, newColor);\n    setPickerOpen(false);\n  };\n\n  const onTogglePicker = () => setPickerOpen(!pickerOpen);\n\n  return (\n    <ThemeOptionWrapper>\n      {!pickerOpen ? (\n        <ColorSquare color={value} onClick={onTogglePicker} />\n      ) : (\n        <RelativePop\n          height=\"200px\"\n          width=\"197px\"\n          position={{\n            horizontal: 11,\n            vertical: 95,\n          }}\n          backgroundColor={currentTheme.surface.colors.primary}\n          borderColor=\"black\"\n          onClickAway={onTogglePicker}\n        >\n          <CompactPicker color={value} onChangeComplete={onChangeComplete} />\n        </RelativePop>\n      )}\n      <SimpleText {...GridElementHeaderProps(currentTheme)}>\n        {displayName}\n      </SimpleText>\n    </ThemeOptionWrapper>\n  );\n};\n\nconst ThemeFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst ThemeForm = ({ currentTheme, initialThemeOptions, formType }) => {\n  const [themeOptions, setThemeOptions] = useState(initialThemeOptions);\n\n  const updateTheme = (optionKey, newVal) => {\n    setThemeOptions({\n      ...themeOptions,\n      [optionKey]: newVal,\n    });\n  };\n\n  return (\n    <ThemeFormWrapper>\n      <ThemeOption\n        currentTheme={theme}\n        name={initialThemeOptions.color.displayName}\n        value={initialThemeOptions.color.value}\n        optionKey={\"color\"}\n        updateTheme={updateTheme}\n      ></ThemeOption>\n    </ThemeFormWrapper>\n  );\n};\n\nexport const ManageThemes = ({ theme, setTheme }) => {\n  return (\n    <React.Fragment>\n      <SimpleText {...TabSectionHeaderProps(theme)}>Manage Themes</SimpleText>\n      <Grid numCols={16} numRows={9} rowUnit=\"28px\" colUnit=\"28px\" key={0}>\n        <GridElement\n          position={{\n            startCol: 1,\n            endCol: 17,\n            startRow: 1,\n            endRow: 10,\n          }}\n        >\n          <ThemeList theme={theme} />\n          <ThemeForm\n            initialThemeOptions={{\n              color: { value: \"red\", displayName: \"Color\" },\n            }}\n          />\n        </GridElement>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}